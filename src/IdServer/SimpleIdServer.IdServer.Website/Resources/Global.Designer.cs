//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SimpleIdServer.IdServer.Website.Resources {
    using System;
    
    
    /// <summary>
    ///   Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
    /// </summary>
    // Cette classe a été générée automatiquement par la classe StronglyTypedResourceBuilder
    // à l'aide d'un outil, tel que ResGen ou Visual Studio.
    // Pour ajouter ou supprimer un membre, modifiez votre fichier .ResX, puis réexécutez ResGen
    // avec l'option /str ou régénérez votre projet VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Global {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Global() {
        }
        
        /// <summary>
        ///   Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SimpleIdServer.IdServer.Website.Resources.Global", typeof(Global).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Remplace la propriété CurrentUICulture du thread actuel pour toutes
        ///   les recherches de ressources à l'aide de cette classe de ressource fortement typée.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Access to the claims of the authenticated user.
        /// </summary>
        public static string AccessClaimsAuthenticatedUser {
            get {
                return ResourceManager.GetString("AccessClaimsAuthenticatedUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Access to one or more API resources.
        /// </summary>
        public static string AccessOneOrMoreApiResources {
            get {
                return ResourceManager.GetString("AccessOneOrMoreApiResources", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Access request.
        /// </summary>
        public static string AccessRequest {
            get {
                return ResourceManager.GetString("AccessRequest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Access settings.
        /// </summary>
        public static string AccessSettings {
            get {
                return ResourceManager.GetString("AccessSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Access Token Type.
        /// </summary>
        public static string AccessTokenType {
            get {
                return ResourceManager.GetString("AccessTokenType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Authentication Class Reference has been added.
        /// </summary>
        public static string AcrAdded {
            get {
                return ResourceManager.GetString("AcrAdded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ACR stands for Authentication Context Class Reference. It is used to enhance the user&apos;s level of assurance before accessing any sensitive information..
        /// </summary>
        public static string AcrsDescription {
            get {
                return ResourceManager.GetString("AcrsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ACRS.
        /// </summary>
        public static string AcrsTitle {
            get {
                return ResourceManager.GetString("AcrsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Active.
        /// </summary>
        public static string Active {
            get {
                return ResourceManager.GetString("Active", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Active realm {0}.
        /// </summary>
        public static string ActiveRealm {
            get {
                return ResourceManager.GetString("ActiveRealm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Add.
        /// </summary>
        public static string Add {
            get {
                return ResourceManager.GetString("Add", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Add Authentication Context Reference.
        /// </summary>
        public static string AddAcr {
            get {
                return ResourceManager.GetString("AddAcr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Add API resource.
        /// </summary>
        public static string AddApiResource {
            get {
                return ResourceManager.GetString("AddApiResource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Add Certificate Authority.
        /// </summary>
        public static string AddCertificateAuthority {
            get {
                return ResourceManager.GetString("AddCertificateAuthority", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Add claim.
        /// </summary>
        public static string AddClaim {
            get {
                return ResourceManager.GetString("AddClaim", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Add client.
        /// </summary>
        public static string AddClient {
            get {
                return ResourceManager.GetString("AddClient", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Add Client Certificate.
        /// </summary>
        public static string AddClientCertificate {
            get {
                return ResourceManager.GetString("AddClientCertificate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Add client scope.
        /// </summary>
        public static string AddClientScope {
            get {
                return ResourceManager.GetString("AddClientScope", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Add credential.
        /// </summary>
        public static string AddCredential {
            get {
                return ResourceManager.GetString("AddCredential", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Add federation entity.
        /// </summary>
        public static string AddFederationEntity {
            get {
                return ResourceManager.GetString("AddFederationEntity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Add group.
        /// </summary>
        public static string AddGroup {
            get {
                return ResourceManager.GetString("AddGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Add Identity Provider.
        /// </summary>
        public static string AddIdentityProvider {
            get {
                return ResourceManager.GetString("AddIdentityProvider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Adding...
        /// </summary>
        public static string Adding {
            get {
                return ResourceManager.GetString("Adding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Add Mapper.
        /// </summary>
        public static string AddMapper {
            get {
                return ResourceManager.GetString("AddMapper", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Add mapping rule.
        /// </summary>
        public static string AddMappingRule {
            get {
                return ResourceManager.GetString("AddMappingRule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Add member.
        /// </summary>
        public static string AddMember {
            get {
                return ResourceManager.GetString("AddMember", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Add permission.
        /// </summary>
        public static string AddPermission {
            get {
                return ResourceManager.GetString("AddPermission", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Add realm.
        /// </summary>
        public static string AddRealm {
            get {
                return ResourceManager.GetString("AddRealm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Add registration workflow.
        /// </summary>
        public static string AddRegistrationWorkflow {
            get {
                return ResourceManager.GetString("AddRegistrationWorkflow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Add client role.
        /// </summary>
        public static string AddRole {
            get {
                return ResourceManager.GetString("AddRole", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Add scope.
        /// </summary>
        public static string AddScope {
            get {
                return ResourceManager.GetString("AddScope", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Add trust anchor.
        /// </summary>
        public static string AddTrustAnchor {
            get {
                return ResourceManager.GetString("AddTrustAnchor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Add user.
        /// </summary>
        public static string AddUser {
            get {
                return ResourceManager.GetString("AddUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Advanced.
        /// </summary>
        public static string Advanced {
            get {
                return ResourceManager.GetString("Advanced", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Algorithm.
        /// </summary>
        public static string Algorithm {
            get {
                return ResourceManager.GetString("Algorithm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Algorithm is required.
        /// </summary>
        public static string AlgorithmRequired {
            get {
                return ResourceManager.GetString("AlgorithmRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à API Resource.
        /// </summary>
        public static string ApiResource {
            get {
                return ResourceManager.GetString("ApiResource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à API Resource with the name &apos;{0}&apos; already exists.
        /// </summary>
        public static string ApiResourceAlreadyExists {
            get {
                return ResourceManager.GetString("ApiResourceAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à API Resources.
        /// </summary>
        public static string ApiResources {
            get {
                return ResourceManager.GetString("ApiResources", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à API Scope.
        /// </summary>
        public static string ApiScope {
            get {
                return ResourceManager.GetString("ApiScope", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à API Value.
        /// </summary>
        public static string APIValue {
            get {
                return ResourceManager.GetString("APIValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Application type.
        /// </summary>
        public static string ApplicationType {
            get {
                return ResourceManager.GetString("ApplicationType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Are-you sure?.
        /// </summary>
        public static string AreYouSure {
            get {
                return ResourceManager.GetString("AreYouSure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Assigned groups.
        /// </summary>
        public static string AssignedGroups {
            get {
                return ResourceManager.GetString("AssignedGroups", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Assigned realms.
        /// </summary>
        public static string AssignedRealms {
            get {
                return ResourceManager.GetString("AssignedRealms", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Assigned resources.
        /// </summary>
        public static string AssignedResources {
            get {
                return ResourceManager.GetString("AssignedResources", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Assign groups.
        /// </summary>
        public static string AssignGroups {
            get {
                return ResourceManager.GetString("AssignGroups", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Assign realms.
        /// </summary>
        public static string AssignRealms {
            get {
                return ResourceManager.GetString("AssignRealms", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Assign.
        /// </summary>
        public static string AssignResources {
            get {
                return ResourceManager.GetString("AssignResources", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Assign.
        /// </summary>
        public static string AssignWorkflow {
            get {
                return ResourceManager.GetString("AssignWorkflow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à At least one redirection URL must be specified.
        /// </summary>
        public static string AtLeastOneRedirectionUrl {
            get {
                return ResourceManager.GetString("AtLeastOneRedirectionUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Authentication attempt today.
        /// </summary>
        public static string AttemptAuthentication {
            get {
                return ResourceManager.GetString("AttemptAuthentication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Attribute.
        /// </summary>
        public static string Attribute {
            get {
                return ResourceManager.GetString("Attribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Audience.
        /// </summary>
        public static string Audience {
            get {
                return ResourceManager.GetString("Audience", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Audience is equired.
        /// </summary>
        public static string AudienceIsRequired {
            get {
                return ResourceManager.GetString("AudienceIsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Auditing.
        /// </summary>
        public static string Auditing {
            get {
                return ResourceManager.GetString("Auditing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Authentication.
        /// </summary>
        public static string Authentication {
            get {
                return ResourceManager.GetString("Authentication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Authentication context.
        /// </summary>
        public static string AuthenticationContext {
            get {
                return ResourceManager.GetString("AuthenticationContext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Authentication method.
        /// </summary>
        public static string AuthenticationMethod {
            get {
                return ResourceManager.GetString("AuthenticationMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Authentication method is required.
        /// </summary>
        public static string AuthenticationMethodRequired {
            get {
                return ResourceManager.GetString("AuthenticationMethodRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Authentication methods.
        /// </summary>
        public static string AuthenticationMethods {
            get {
                return ResourceManager.GetString("AuthenticationMethods", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Authentications.
        /// </summary>
        public static string Authentications {
            get {
                return ResourceManager.GetString("Authentications", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Authentication time.
        /// </summary>
        public static string AuthenticationTime {
            get {
                return ResourceManager.GetString("AuthenticationTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Capabilities.
        /// </summary>
        public static string AuthMethodCapabilities {
            get {
                return ResourceManager.GetString("AuthMethodCapabilities", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Authentication Method has been updated.
        /// </summary>
        public static string AuthMethodUpdated {
            get {
                return ResourceManager.GetString("AuthMethodUpdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Authorization code.
        /// </summary>
        public static string AuthorizationCode {
            get {
                return ResourceManager.GetString("AuthorizationCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Authorization data types.
        /// </summary>
        public static string AuthorizationDataTypes {
            get {
                return ResourceManager.GetString("AuthorizationDataTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Authorization data types must be passed as a list separated by &lt;b&gt;;&lt;/b&gt;.
        /// </summary>
        public static string AuthorizationDataTypesDescription {
            get {
                return ResourceManager.GetString("AuthorizationDataTypesDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Authorization data types supported by the client.
        /// </summary>
        public static string AuthorizationDataTypesTooltip {
            get {
                return ResourceManager.GetString("AuthorizationDataTypesTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Authorization details.
        /// </summary>
        public static string AuthorizationDetails {
            get {
                return ResourceManager.GetString("AuthorizationDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Authorization response signature algorithm.
        /// </summary>
        public static string AuthorizationResponseSignatureAlg {
            get {
                return ResourceManager.GetString("AuthorizationResponseSignatureAlg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à JWA algorithm used for signing authorization response tokens when the response mode is jwt..
        /// </summary>
        public static string AuthorizationResponseSignatureAlgTooltip {
            get {
                return ResourceManager.GetString("AuthorizationResponseSignatureAlgTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Automatic Identity Provisioning.
        /// </summary>
        public static string AutomaticIdentityProvisioning {
            get {
                return ResourceManager.GetString("AutomaticIdentityProvisioning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Available realms.
        /// </summary>
        public static string AvailableRealms {
            get {
                return ResourceManager.GetString("AvailableRealms", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Available resources.
        /// </summary>
        public static string AvailableResources {
            get {
                return ResourceManager.GetString("AvailableResources", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Backchannel logout session required.
        /// </summary>
        public static string BackChannelLogoutSessionRequired {
            get {
                return ResourceManager.GetString("BackChannelLogoutSessionRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Boolean value specifying whether the OP can pass a SID claim in the Logout token to identify the RP session with the OP. &lt;br /&gt; If supported, the sid claim is also included in ID tokens issued by the OP..
        /// </summary>
        public static string BackChannelLogoutSessionRequiredTooltip {
            get {
                return ResourceManager.GetString("BackChannelLogoutSessionRequiredTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Backchannel logout URL.
        /// </summary>
        public static string BackChannelLogoutUri {
            get {
                return ResourceManager.GetString("BackChannelLogoutUri", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à RP URL that will cause the RP to log itself out when sent a Logout Token by the OP..
        /// </summary>
        public static string BackChannelLogoutUriTooltip {
            get {
                return ResourceManager.GetString("BackChannelLogoutUriTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Blocked.
        /// </summary>
        public static string Blocked {
            get {
                return ResourceManager.GetString("Blocked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Realm cannot be added because the option is disabled.
        /// </summary>
        public static string CannotAddRealmBecauseOptionIsDisabled {
            get {
                return ResourceManager.GetString("CannotAddRealmBecauseOptionIsDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à You don&apos;t have the permission to read the certificate store.
        /// </summary>
        public static string CannotReadCertificateStore {
            get {
                return ResourceManager.GetString("CannotReadCertificateStore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Capability config.
        /// </summary>
        public static string CapabilityConfig {
            get {
                return ResourceManager.GetString("CapabilityConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Manage the Certificate Authorities used by SimpleIdServer during the configuration of the &lt;i&gt;tls_client_auth&lt;/i&gt; authentication method.
        /// </summary>
        public static string CertificateAuthoritiesDescription {
            get {
                return ResourceManager.GetString("CertificateAuthoritiesDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Certificate Authorities.
        /// </summary>
        public static string CertificateAuthoritiesTitle {
            get {
                return ResourceManager.GetString("CertificateAuthoritiesTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Certificate Authority Details.
        /// </summary>
        public static string CertificateAuthorityDetailsTitle {
            get {
                return ResourceManager.GetString("CertificateAuthorityDetailsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Certificate Authority has been saved.
        /// </summary>
        public static string CertificateAuthoritySaved {
            get {
                return ResourceManager.GetString("CertificateAuthoritySaved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Certificate Authority Type.
        /// </summary>
        public static string CertificateAuthorityType {
            get {
                return ResourceManager.GetString("CertificateAuthorityType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The certificate doesn&apos;t exist.
        /// </summary>
        public static string CertificateDoesntExist {
            get {
                return ResourceManager.GetString("CertificateDoesntExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The certificate doesn&apos;t contain private key.
        /// </summary>
        public static string CertificateDoesntHavePrivateKey {
            get {
                return ResourceManager.GetString("CertificateDoesntHavePrivateKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Certificate store.
        /// </summary>
        public static string CertificateStore {
            get {
                return ResourceManager.GetString("CertificateStore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Children.
        /// </summary>
        public static string Children {
            get {
                return ResourceManager.GetString("Children", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Choose a type of mapping rule.
        /// </summary>
        public static string ChooseMappingRule {
            get {
                return ResourceManager.GetString("ChooseMappingRule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Choose realm.
        /// </summary>
        public static string ChooseRealm {
            get {
                return ResourceManager.GetString("ChooseRealm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Choose template.
        /// </summary>
        public static string ChooseTemplate {
            get {
                return ResourceManager.GetString("ChooseTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à CIBA.
        /// </summary>
        public static string CIBA {
            get {
                return ResourceManager.GetString("CIBA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Claim JSON Type.
        /// </summary>
        public static string ClaimJsonType {
            get {
                return ResourceManager.GetString("ClaimJsonType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Claim JSON Type is required.
        /// </summary>
        public static string ClaimJsonTypeRequired {
            get {
                return ResourceManager.GetString("ClaimJsonTypeRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Claims.
        /// </summary>
        public static string Claims {
            get {
                return ResourceManager.GetString("Claims", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à List of user claims..
        /// </summary>
        public static string ClaimsDescription {
            get {
                return ResourceManager.GetString("ClaimsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Name of the claim to insert into the token.
        /// </summary>
        public static string ClaimToInsertInTheToken {
            get {
                return ResourceManager.GetString("ClaimToInsertInTheToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Client.
        /// </summary>
        public static string Client {
            get {
                return ResourceManager.GetString("Client", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The client &apos;{0}&apos; has successfully been added.
        /// </summary>
        public static string ClientAdded {
            get {
                return ResourceManager.GetString("ClientAdded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Advanced settings have been updated.
        /// </summary>
        public static string ClientAdvancedSettingsUpdated {
            get {
                return ResourceManager.GetString("ClientAdvancedSettingsUpdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Client cannot be added because an another client exists with the same name.
        /// </summary>
        public static string ClientAlreadyExists {
            get {
                return ResourceManager.GetString("ClientAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Client Certificate.
        /// </summary>
        public static string ClientCertificate {
            get {
                return ResourceManager.GetString("ClientCertificate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Client Certificate has been added.
        /// </summary>
        public static string ClientCertificateAdded {
            get {
                return ResourceManager.GetString("ClientCertificateAdded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Client certificates.
        /// </summary>
        public static string ClientCertificates {
            get {
                return ResourceManager.GetString("ClientCertificates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Client credentials.
        /// </summary>
        public static string ClientCredentials {
            get {
                return ResourceManager.GetString("ClientCredentials", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Client credentials are updated.
        /// </summary>
        public static string ClientCredentialsUpdated {
            get {
                return ResourceManager.GetString("ClientCredentialsUpdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ACR must be sorted by priority.
        /// </summary>
        public static string ClientDefaultAcrValuesHelper {
            get {
                return ResourceManager.GetString("ClientDefaultAcrValuesHelper", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Client details.
        /// </summary>
        public static string ClientDetailsTitle {
            get {
                return ResourceManager.GetString("ClientDetailsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Expiration time.
        /// </summary>
        public static string ClientExpirationTime {
            get {
                return ResourceManager.GetString("ClientExpirationTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Client identifier.
        /// </summary>
        public static string ClientIdentifier {
            get {
                return ResourceManager.GetString("ClientIdentifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Select one or more realms.
        /// </summary>
        public static string ClientRealmsDescription {
            get {
                return ResourceManager.GetString("ClientRealmsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Client registration types.
        /// </summary>
        public static string ClientRegistrationTypes {
            get {
                return ResourceManager.GetString("ClientRegistrationTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Client role has been added.
        /// </summary>
        public static string ClientRoleAdded {
            get {
                return ResourceManager.GetString("ClientRoleAdded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Clients.
        /// </summary>
        public static string Clients {
            get {
                return ResourceManager.GetString("Clients", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Clients authorized to access an API resource are granted access to one or more scopes. For example, a &lt;i&gt;Client API&lt;/i&gt; can have scopes such as &lt;i&gt;read,delete,update&lt;/i&gt;. For more information, please refer to the documentation at &lt;a href=&apos;https://www.rfc-editor.org/rfc/rfc8707.pdf&apos; target=&apos;_blank&apos;&gt;RFC8707&lt;/a&gt;.
        /// </summary>
        public static string ClientsAuthorizedToAccessApiResource {
            get {
                return ResourceManager.GetString("ClientsAuthorizedToAccessApiResource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Clients authorized to access the Identity Value have access to specific claims. Standard Identity Resources are defined by the OPENID standard (such as profile, email, etc.). For more information, please refer to the documentation at &lt;a href=&apos;https://openid.net/specs/openid-connect-core-1_0.html#ScopeClaims&apos; target=&apos;_blank&apos;&gt;OPENID Connect Core 1.0 - Scope Claims&lt;/a&gt;.
        /// </summary>
        public static string ClientsAuthorizedToAccessSpecificClaims {
            get {
                return ResourceManager.GetString("ClientsAuthorizedToAccessSpecificClaims", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Client scopes.
        /// </summary>
        public static string ClientScopes {
            get {
                return ResourceManager.GetString("ClientScopes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Client scopes have been added.
        /// </summary>
        public static string ClientScopesAdded {
            get {
                return ResourceManager.GetString("ClientScopesAdded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Set up mobile, web, or IoT clients to use SimpleIdServer for authentication..
        /// </summary>
        public static string ClientsDescription {
            get {
                return ResourceManager.GetString("ClientsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Client secret.
        /// </summary>
        public static string ClientSecret {
            get {
                return ResourceManager.GetString("ClientSecret", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The application utilizes the HTTP Basic Authentication scheme..
        /// </summary>
        public static string ClientSecretBasicDescription {
            get {
                return ResourceManager.GetString("ClientSecretBasicDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Client secret basic.
        /// </summary>
        public static string ClientSecretBasicName {
            get {
                return ResourceManager.GetString("ClientSecretBasicName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The application includes its secret in the HTTP request body as a form parameter..
        /// </summary>
        public static string ClientSecretPostDescription {
            get {
                return ResourceManager.GetString("ClientSecretPostDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Client secret post.
        /// </summary>
        public static string ClientSecretPostName {
            get {
                return ResourceManager.GetString("ClientSecretPostName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Client secret is required.
        /// </summary>
        public static string ClientSecretRequired {
            get {
                return ResourceManager.GetString("ClientSecretRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Client settings have been updated.
        /// </summary>
        public static string ClientSettingsUpdated {
            get {
                return ResourceManager.GetString("ClientSettingsUpdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The client realms have been updated.
        /// </summary>
        public static string ClientsRealmsUpdated {
            get {
                return ResourceManager.GetString("ClientsRealmsUpdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Clients.
        /// </summary>
        public static string ClientsTitle {
            get {
                return ResourceManager.GetString("ClientsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Component.
        /// </summary>
        public static string Component {
            get {
                return ResourceManager.GetString("Component", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Configure.
        /// </summary>
        public static string Configure {
            get {
                return ResourceManager.GetString("Configure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Confirm.
        /// </summary>
        public static string Confirm {
            get {
                return ResourceManager.GetString("Confirm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Confirmed.
        /// </summary>
        public static string Confirmed {
            get {
                return ResourceManager.GetString("Confirmed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Consent required.
        /// </summary>
        public static string ConsentRequired {
            get {
                return ResourceManager.GetString("ConsentRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Consents.
        /// </summary>
        public static string Consents {
            get {
                return ResourceManager.GetString("Consents", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Content.
        /// </summary>
        public static string Content {
            get {
                return ResourceManager.GetString("Content", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Counter.
        /// </summary>
        public static string Counter {
            get {
                return ResourceManager.GetString("Counter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Create.
        /// </summary>
        public static string Create {
            get {
                return ResourceManager.GetString("Create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Created at.
        /// </summary>
        public static string CreatedAt {
            get {
                return ResourceManager.GetString("CreatedAt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Creation Datetime.
        /// </summary>
        public static string CreateDateTime {
            get {
                return ResourceManager.GetString("CreateDateTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Credential issuer.
        /// </summary>
        public static string CredentialIssuer {
            get {
                return ResourceManager.GetString("CredentialIssuer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à A REST API for credential issuance capable of generating trusted and verifiable credentials, such as University Degrees..
        /// </summary>
        public static string CredentialIssuerDescription {
            get {
                return ResourceManager.GetString("CredentialIssuerDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Credential issuer.
        /// </summary>
        public static string CredentialIssuerShortDescription {
            get {
                return ResourceManager.GetString("CredentialIssuerShortDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Credential offer has been added.
        /// </summary>
        public static string CredentialOfferAdded {
            get {
                return ResourceManager.GetString("CredentialOfferAdded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Credentials.
        /// </summary>
        public static string Credentials {
            get {
                return ResourceManager.GetString("Credentials", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Credential subject has been added.
        /// </summary>
        public static string CredentialSubjectAdded {
            get {
                return ResourceManager.GetString("CredentialSubjectAdded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Credential template is added.
        /// </summary>
        public static string CredentialTemplateAdded {
            get {
                return ResourceManager.GetString("CredentialTemplateAdded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Display has been added.
        /// </summary>
        public static string CredentialTemplateDisplayAdded {
            get {
                return ResourceManager.GetString("CredentialTemplateDisplayAdded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The credential template with type &apos;{0}&apos; already exists.
        /// </summary>
        public static string CredentialTemplateExists {
            get {
                return ResourceManager.GetString("CredentialTemplateExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Credential types are updated.
        /// </summary>
        public static string CredentialTypesAreUpdated {
            get {
                return ResourceManager.GetString("CredentialTypesAreUpdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Data.
        /// </summary>
        public static string Data {
            get {
                return ResourceManager.GetString("Data", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Default acr methods.
        /// </summary>
        public static string DefaultClientAcr {
            get {
                return ResourceManager.GetString("DefaultClientAcr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Default authentication method used by the client to authenticate the user.
        /// </summary>
        public static string DefaultClientAcrTooltip {
            get {
                return ResourceManager.GetString("DefaultClientAcrTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Delegation.
        /// </summary>
        public static string Delegation {
            get {
                return ResourceManager.GetString("Delegation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Delete.
        /// </summary>
        public static string Delete {
            get {
                return ResourceManager.GetString("Delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Description.
        /// </summary>
        public static string Description {
            get {
                return ResourceManager.GetString("Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Description is required.
        /// </summary>
        public static string DescriptionRequired {
            get {
                return ResourceManager.GetString("DescriptionRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Details.
        /// </summary>
        public static string Details {
            get {
                return ResourceManager.GetString("Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Device.
        /// </summary>
        public static string Device {
            get {
                return ResourceManager.GetString("Device", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à An IoT application or otherwise browserless or input constrained device..
        /// </summary>
        public static string DeviceDescription {
            get {
                return ResourceManager.GetString("DeviceDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Device Authorization grant.
        /// </summary>
        public static string DeviceShortDescription {
            get {
                return ResourceManager.GetString("DeviceShortDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à DID has been generated.
        /// </summary>
        public static string DIDKeyCreated {
            get {
                return ResourceManager.GetString("DIDKeyCreated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Disable.
        /// </summary>
        public static string Disable {
            get {
                return ResourceManager.GetString("Disable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Display name.
        /// </summary>
        public static string DisplayName {
            get {
                return ResourceManager.GetString("DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Display Name is required.
        /// </summary>
        public static string DisplayNameRequired {
            get {
                return ResourceManager.GetString("DisplayNameRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Display Only Errors.
        /// </summary>
        public static string DisplayOnlyErrors {
            get {
                return ResourceManager.GetString("DisplayOnlyErrors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à DNS.
        /// </summary>
        public static string Dns {
            get {
                return ResourceManager.GetString("Dns", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Download.
        /// </summary>
        public static string Download {
            get {
                return ResourceManager.GetString("Download", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Lifetime of DPoP Nonce.
        /// </summary>
        public static string DpopNonceLifetime {
            get {
                return ResourceManager.GetString("DpopNonceLifetime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Lifetime of a DPoP nonce in seconds..
        /// </summary>
        public static string DpopNonceLifetimeTooltip {
            get {
                return ResourceManager.GetString("DpopNonceLifetimeTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Email.
        /// </summary>
        public static string Email {
            get {
                return ResourceManager.GetString("Email", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Provide a valid email address.
        /// </summary>
        public static string EmailIsInvalid {
            get {
                return ResourceManager.GetString("EmailIsInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Encryption key has been added.
        /// </summary>
        public static string EncKeyAdded {
            get {
                return ResourceManager.GetString("EncKeyAdded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Encryption.
        /// </summary>
        public static string Encryption {
            get {
                return ResourceManager.GetString("Encryption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Encryption Key.
        /// </summary>
        public static string EncryptionKey {
            get {
                return ResourceManager.GetString("EncryptionKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Encryption is required.
        /// </summary>
        public static string EncryptionRequired {
            get {
                return ResourceManager.GetString("EncryptionRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à End Datetime.
        /// </summary>
        public static string EndDatetime {
            get {
                return ResourceManager.GetString("EndDatetime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à End export.
        /// </summary>
        public static string EndExport {
            get {
                return ResourceManager.GetString("EndExport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à End import.
        /// </summary>
        public static string EndImport {
            get {
                return ResourceManager.GetString("EndImport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Error Message.
        /// </summary>
        public static string ErrorMessage {
            get {
                return ResourceManager.GetString("ErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Errors.
        /// </summary>
        public static string Errors {
            get {
                return ResourceManager.GetString("Errors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Ethereum contract has been deployed.
        /// </summary>
        public static string EthrContractDeployed {
            get {
                return ResourceManager.GetString("EthrContractDeployed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Ethereum network has been added.
        /// </summary>
        public static string EthrNetworkAdded {
            get {
                return ResourceManager.GetString("EthrNetworkAdded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The ethereum network {0} already exists.
        /// </summary>
        public static string EthrNetworkExists {
            get {
                return ResourceManager.GetString("EthrNetworkExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Exception.
        /// </summary>
        public static string Exception {
            get {
                return ResourceManager.GetString("Exception", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Execution history..
        /// </summary>
        public static string ExecutionHistory {
            get {
                return ResourceManager.GetString("ExecutionHistory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Expiration time.
        /// </summary>
        public static string ExpirationTime {
            get {
                return ResourceManager.GetString("ExpirationTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Expired.
        /// </summary>
        public static string Expired {
            get {
                return ResourceManager.GetString("Expired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à External authentication provider has been unlinked.
        /// </summary>
        public static string ExternalAuthProviderUnlinked {
            get {
                return ResourceManager.GetString("ExternalAuthProviderUnlinked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à External Device Authentication.
        /// </summary>
        public static string ExternalDeviceAuth {
            get {
                return ResourceManager.GetString("ExternalDeviceAuth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Client Initiated Backchannel Authentication (CIBA) flow.
        /// </summary>
        public static string ExternalDeviceAuthShortDescription {
            get {
                return ResourceManager.GetString("ExternalDeviceAuthShortDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Authentication is performed via an Authentication Device by the user who also consents (if required) to the request..
        /// </summary>
        public static string ExternalDeviceDescription {
            get {
                return ResourceManager.GetString("ExternalDeviceDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à External identity providers.
        /// </summary>
        public static string ExternalIdentityProviders {
            get {
                return ResourceManager.GetString("ExternalIdentityProviders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à External Identity Providers.
        /// </summary>
        public static string ExternalIdProviders {
            get {
                return ResourceManager.GetString("ExternalIdProviders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Extracted.
        /// </summary>
        public static string Extracted {
            get {
                return ResourceManager.GetString("Extracted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Extraction result.
        /// </summary>
        public static string ExtractionResult {
            get {
                return ResourceManager.GetString("ExtractionResult", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Manage the trust anchors used by the identity server..
        /// </summary>
        public static string FederationEntitiesDescription {
            get {
                return ResourceManager.GetString("FederationEntitiesDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Federation entities.
        /// </summary>
        public static string FederationEntitiesTitle {
            get {
                return ResourceManager.GetString("FederationEntitiesTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Entity type.
        /// </summary>
        public static string FederationEntityType {
            get {
                return ResourceManager.GetString("FederationEntityType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Filter the authentication methods by their capabilities.
        /// </summary>
        public static string FilterAuthMethodByCapabilities {
            get {
                return ResourceManager.GetString("FilterAuthMethodByCapabilities", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Find type.
        /// </summary>
        public static string FindType {
            get {
                return ResourceManager.GetString("FindType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Find value.
        /// </summary>
        public static string FindValue {
            get {
                return ResourceManager.GetString("FindValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à First name.
        /// </summary>
        public static string Firstname {
            get {
                return ResourceManager.GetString("Firstname", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à From.
        /// </summary>
        public static string From {
            get {
                return ResourceManager.GetString("From", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Front-channel logout session required.
        /// </summary>
        public static string FrontChannelLogoutSessionRequired {
            get {
                return ResourceManager.GetString("FrontChannelLogoutSessionRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Boolean value specifying whether the RP requires that iss (issuer) and sid (session id) query parameters be included to identify the RP session with the OP when the front_channel_logout_uri is used..
        /// </summary>
        public static string FrontChannelLogoutSessionRequiredTooltip {
            get {
                return ResourceManager.GetString("FrontChannelLogoutSessionRequiredTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Front-channel logout URL.
        /// </summary>
        public static string FrontChannelLogoutUri {
            get {
                return ResourceManager.GetString("FrontChannelLogoutUri", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à RP URL that will cause the RP to log itself out when rendered in an iframe by the OP..
        /// </summary>
        public static string FrontChannelLogoutUriTooltip {
            get {
                return ResourceManager.GetString("FrontChannelLogoutUriTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à General settings.
        /// </summary>
        public static string GeneralSettings {
            get {
                return ResourceManager.GetString("GeneralSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Generate.
        /// </summary>
        public static string Generate {
            get {
                return ResourceManager.GetString("Generate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Generate a Certificate Authority and store it in the database..
        /// </summary>
        public static string GenerateCADescription {
            get {
                return ResourceManager.GetString("GenerateCADescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Generate one Certificate Authority.
        /// </summary>
        public static string GenerateCAName {
            get {
                return ResourceManager.GetString("GenerateCAName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Generate JSON Web Encryption (JWE) &lt;a href=&apos;https://www.rfc-editor.org/rfc/rfc7516&apos; target=&apos;_blank&apos;&gt;https://www.rfc-editor.org/rfc/rfc7516&lt;/a&gt;.
        /// </summary>
        public static string GenerateEncryptionKeyHelper {
            get {
                return ResourceManager.GetString("GenerateEncryptionKeyHelper", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Generate new key.
        /// </summary>
        public static string GenerateNewKey {
            get {
                return ResourceManager.GetString("GenerateNewKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Generate a signature key. Check the JWT request object at &lt;a href=&apos;https://openid.net/specs/openid-connect-core-1_0.html#JWTRequests&apos; target=&apos;_blank&apos;&gt;OpenID Connect Core 1.0 - JWT Requests&lt;/a&gt;. This key is used in the &lt;i&gt;private_key_jwt&lt;/i&gt; and &lt;i&gt;client_secret_jwt&lt;/i&gt; authentication flows, as described in &lt;a href=&apos;https://openid.net/specs/openid-connect-core-1_0.html#ClientAuthentication&apos; target=&apos;_blank&apos;&gt;OpenID Connect Core 1.0 - Client Authentication.&lt;/a&gt;.
        /// </summary>
        public static string GenerateSignatureKeyHelper {
            get {
                return ResourceManager.GetString("GenerateSignatureKeyHelper", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Grant Management.
        /// </summary>
        public static string GrantMgt {
            get {
                return ResourceManager.GetString("GrantMgt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The web application is executed on a server (ASP.NET CORE, SPRING, etc.) and implements all the security requirements proposed by FAPI 2.0. Additionally, it supports grant management.
        /// </summary>
        public static string GrantMgtDescription {
            get {
                return ResourceManager.GetString("GrantMgtDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Web application with FAPI 2.0 security requirements and grant management support..
        /// </summary>
        public static string GrantMgtShortDescription {
            get {
                return ResourceManager.GetString("GrantMgtShortDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Group.
        /// </summary>
        public static string Group {
            get {
                return ResourceManager.GetString("Group", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Group has been added.
        /// </summary>
        public static string GroupAdded {
            get {
                return ResourceManager.GetString("GroupAdded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Group with the name {0} already exists.
        /// </summary>
        public static string GroupAlreadyExists {
            get {
                return ResourceManager.GetString("GroupAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Group details.
        /// </summary>
        public static string GroupDetails {
            get {
                return ResourceManager.GetString("GroupDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Group Identifier.
        /// </summary>
        public static string GroupIdentifier {
            get {
                return ResourceManager.GetString("GroupIdentifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Member has been added.
        /// </summary>
        public static string GroupMemberAdded {
            get {
                return ResourceManager.GetString("GroupMemberAdded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Selected members have been removed.
        /// </summary>
        public static string GroupMembersRemoved {
            get {
                return ResourceManager.GetString("GroupMembersRemoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Group name.
        /// </summary>
        public static string GroupName {
            get {
                return ResourceManager.GetString("GroupName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Roles have been added.
        /// </summary>
        public static string GroupRolesAdded {
            get {
                return ResourceManager.GetString("GroupRolesAdded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Selected group roles have been removed.
        /// </summary>
        public static string GroupRolesRemoved {
            get {
                return ResourceManager.GetString("GroupRolesRemoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Groups.
        /// </summary>
        public static string Groups {
            get {
                return ResourceManager.GetString("Groups", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Highly secure Web Application.
        /// </summary>
        public static string HighlySecuredWebApp {
            get {
                return ResourceManager.GetString("HighlySecuredWebApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The web application is executed on a server (ASP.NET CORE, SPRING, etc.) and implements all the security requirements proposed by FAPI 2.0..
        /// </summary>
        public static string HighlySecuredWebAppDescription {
            get {
                return ResourceManager.GetString("HighlySecuredWebAppDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Web Application with FAPI 2.0 security requirements.
        /// </summary>
        public static string HighlySecuredWebAppShortDescription {
            get {
                return ResourceManager.GetString("HighlySecuredWebAppShortDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Histories.
        /// </summary>
        public static string Histories {
            get {
                return ResourceManager.GetString("Histories", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à HMAC-based One time Password algorithm (HOTP) is an event-based OTP where the moving factor in each code is based on a counter..
        /// </summary>
        public static string HotpDescription {
            get {
                return ResourceManager.GetString("HotpDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Identifier.
        /// </summary>
        public static string Identifier {
            get {
                return ResourceManager.GetString("Identifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Identifier is required.
        /// </summary>
        public static string IdentifierIsRequired {
            get {
                return ResourceManager.GetString("IdentifierIsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Identity Provider details.
        /// </summary>
        public static string IdentityProviderDetails {
            get {
                return ResourceManager.GetString("IdentityProviderDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Identity Provider mappers.
        /// </summary>
        public static string IdentityProviderMappers {
            get {
                return ResourceManager.GetString("IdentityProviderMappers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Identity providers.
        /// </summary>
        public static string IdentityProviders {
            get {
                return ResourceManager.GetString("IdentityProviders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Configure external Identity Providers such as Facebook, Twitter, GitHub, and others, so that your users can log in using them..
        /// </summary>
        public static string IdentityProvidersDescription {
            get {
                return ResourceManager.GetString("IdentityProvidersDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Identity Provider Type.
        /// </summary>
        public static string IdentityProviderType {
            get {
                return ResourceManager.GetString("IdentityProviderType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Identity provisioning.
        /// </summary>
        public static string IdentityProvisioning {
            get {
                return ResourceManager.GetString("IdentityProvisioning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Identity Provisioning details.
        /// </summary>
        public static string IdentityProvisioningDetails {
            get {
                return ResourceManager.GetString("IdentityProvisioningDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Identity Provisioning is launched.
        /// </summary>
        public static string IdentityProvisioningLaunched {
            get {
                return ResourceManager.GetString("IdentityProvisioningLaunched", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Extract users and groups from one or more storage sources..
        /// </summary>
        public static string IdentityProvisioningLstDescription {
            get {
                return ResourceManager.GetString("IdentityProvisioningLstDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Identity Resource.
        /// </summary>
        public static string IdentityResource {
            get {
                return ResourceManager.GetString("IdentityResource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Identity Scope.
        /// </summary>
        public static string IdentityScope {
            get {
                return ResourceManager.GetString("IdentityScope", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Identity Value.
        /// </summary>
        public static string IdentityValue {
            get {
                return ResourceManager.GetString("IdentityValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Identity Provider has been added.
        /// </summary>
        public static string IdProviderAdded {
            get {
                return ResourceManager.GetString("IdProviderAdded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Identity Provider details have been updated.
        /// </summary>
        public static string IdProviderDetailsUpdated {
            get {
                return ResourceManager.GetString("IdProviderDetailsUpdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à An Identity Provider named &apos;{0}&apos; already exists.
        /// </summary>
        public static string IdProviderExists {
            get {
                return ResourceManager.GetString("IdProviderExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Mapper rule has been added.
        /// </summary>
        public static string IdProviderMapperAdded {
            get {
                return ResourceManager.GetString("IdProviderMapperAdded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Mapper has been updated.
        /// </summary>
        public static string IdProviderMapperUpdated {
            get {
                return ResourceManager.GetString("IdProviderMapperUpdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Identity Provider Properties have been updated.
        /// </summary>
        public static string IdProviderPropertiesUpdated {
            get {
                return ResourceManager.GetString("IdProviderPropertiesUpdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Details have been updated.
        /// </summary>
        public static string IdProvisioningDetailsUpdated {
            get {
                return ResourceManager.GetString("IdProvisioningDetailsUpdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The identity provisioning mapping rule has been updated.
        /// </summary>
        public static string IdProvisioningMapperUpdated {
            get {
                return ResourceManager.GetString("IdProvisioningMapperUpdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Mapping rule has been added.
        /// </summary>
        public static string IdProvisioningMappingRuleAdded {
            get {
                return ResourceManager.GetString("IdProvisioningMappingRuleAdded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Properties have been updated.
        /// </summary>
        public static string IdProvisioningPropertiesUpdated {
            get {
                return ResourceManager.GetString("IdProvisioningPropertiesUpdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à IdServer swagger.
        /// </summary>
        public static string IdServerSwagger {
            get {
                return ResourceManager.GetString("IdServerSwagger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ID token signature algorithm.
        /// </summary>
        public static string IdTokenSignatureAlg {
            get {
                return ResourceManager.GetString("IdTokenSignatureAlg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à JWA algorithm used for signing ID tokens.
        /// </summary>
        public static string IdTokenSignatureAlgTooltip {
            get {
                return ResourceManager.GetString("IdTokenSignatureAlgTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Impersonation.
        /// </summary>
        public static string Impersonation {
            get {
                return ResourceManager.GetString("Impersonation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Import.
        /// </summary>
        public static string Import {
            get {
                return ResourceManager.GetString("Import", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Imported.
        /// </summary>
        public static string Imported {
            get {
                return ResourceManager.GetString("Imported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Import is launched.
        /// </summary>
        public static string ImportLaunched {
            get {
                return ResourceManager.GetString("ImportLaunched", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Import users and groups.
        /// </summary>
        public static string ImportUsersAndGroupsTooltip {
            get {
                return ResourceManager.GetString("ImportUsersAndGroupsTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Include in access token.
        /// </summary>
        public static string IncludeInAccessToken {
            get {
                return ResourceManager.GetString("IncludeInAccessToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Information.
        /// </summary>
        public static string Information {
            get {
                return ResourceManager.GetString("Information", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Redirection url &apos;{0}&apos; is not valid.
        /// </summary>
        public static string InvalidRedirectUrl {
            get {
                return ResourceManager.GetString("InvalidRedirectUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Ip.
        /// </summary>
        public static string Ip {
            get {
                return ResourceManager.GetString("Ip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Is default?.
        /// </summary>
        public static string IsDefault {
            get {
                return ResourceManager.GetString("IsDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Is DPoP Nonce required?.
        /// </summary>
        public static string IsDpopNonceRequired {
            get {
                return ResourceManager.GetString("IsDpopNonceRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à May be used by the authorization server to limit the lifetime of DPoP Proof..
        /// </summary>
        public static string IsDpopNonceRequiredTooltip {
            get {
                return ResourceManager.GetString("IsDpopNonceRequiredTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Is DPoP required?.
        /// </summary>
        public static string IsDpopRequired {
            get {
                return ResourceManager.GetString("IsDpopRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à DPoP is an application-level mechanism for sender-constraining OAuth access and refresh tokens..
        /// </summary>
        public static string IsDpopRequiredTooltip {
            get {
                return ResourceManager.GetString("IsDpopRequiredTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Is exposed ?.
        /// </summary>
        public static string IsExposed {
            get {
                return ResourceManager.GetString("IsExposed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Scope can be exposed by the configuration endpoint &lt;i&gt;.well-known/openid-configuration&lt;/i&gt;.
        /// </summary>
        public static string IsExposedDescription {
            get {
                return ResourceManager.GetString("IsExposedDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Jwe.
        /// </summary>
        public static string Jwe {
            get {
                return ResourceManager.GetString("Jwe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Json Web Key (JWK).
        /// </summary>
        public static string Jwk {
            get {
                return ResourceManager.GetString("Jwk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Check the JWT request object at &lt;a href=&apos;https://openid.net/specs/openid-connect-core-1_0.html#JWTRequests&apos; target=&apos;_blank&apos;&gt;OpenID Connect Core 1.0 - JWT Requests&lt;/a&gt;. This key is used in the &lt;i&gt;private_key_jwt&lt;/i&gt; and &lt;i&gt;client_secret_jwt&lt;/i&gt; authentication flows, as described in &lt;a href=&apos;https://openid.net/specs/openid-connect-core-1_0.html#ClientAuthentication&apos; target=&apos;_blank&apos;&gt;OpenID Connect Core 1.0 - Client Authentication.&lt;/a&gt;.
        /// </summary>
        public static string JwkClientUsageDescription {
            get {
                return ResourceManager.GetString("JwkClientUsageDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à JWKS Url has been updated.
        /// </summary>
        public static string JWKSUrlUpdated {
            get {
                return ResourceManager.GetString("JWKSUrlUpdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Json Web Token (JWT).
        /// </summary>
        public static string Jwt {
            get {
                return ResourceManager.GetString("Jwt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Key.
        /// </summary>
        public static string Key {
            get {
                return ResourceManager.GetString("Key", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Key has been generated !.
        /// </summary>
        public static string KeyGenerated {
            get {
                return ResourceManager.GetString("KeyGenerated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Key is required.
        /// </summary>
        public static string KeyRequired {
            get {
                return ResourceManager.GetString("KeyRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Keys.
        /// </summary>
        public static string Keys {
            get {
                return ResourceManager.GetString("Keys", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Key type.
        /// </summary>
        public static string KeyType {
            get {
                return ResourceManager.GetString("KeyType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Key type is required.
        /// </summary>
        public static string KeyTypeRequired {
            get {
                return ResourceManager.GetString("KeyTypeRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Label.
        /// </summary>
        public static string Label {
            get {
                return ResourceManager.GetString("Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Last name.
        /// </summary>
        public static string Lastname {
            get {
                return ResourceManager.GetString("Lastname", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Launch.
        /// </summary>
        public static string Launch {
            get {
                return ResourceManager.GetString("Launch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à According to the type of identity provisioning, you must specify an LDAP property or a JSON path if you are using SCIM..
        /// </summary>
        public static string LdapOrJsonPathRequired {
            get {
                return ResourceManager.GetString("LdapOrJsonPathRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Legend.
        /// </summary>
        public static string Legend {
            get {
                return ResourceManager.GetString("Legend", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Loading....
        /// </summary>
        public static string Loading {
            get {
                return ResourceManager.GetString("Loading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Lock account.
        /// </summary>
        public static string LockAccount {
            get {
                return ResourceManager.GetString("LockAccount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Login.
        /// </summary>
        public static string Login {
            get {
                return ResourceManager.GetString("Login", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Login settings.
        /// </summary>
        public static string LoginSettings {
            get {
                return ResourceManager.GetString("LoginSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Machine.
        /// </summary>
        public static string Machine {
            get {
                return ResourceManager.GetString("Machine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Machine-to-machine (M2M) applications, such as CLIs, daemons, or services running on your back-end, the system authenticates and authorizes the app rather than a user..
        /// </summary>
        public static string MachineDescription {
            get {
                return ResourceManager.GetString("MachineDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Client credentials.
        /// </summary>
        public static string MachineShortDescription {
            get {
                return ResourceManager.GetString("MachineShortDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Manage.
        /// </summary>
        public static string Manage {
            get {
                return ResourceManager.GetString("Manage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Manual action is required to revoke a session.
        /// </summary>
        public static string ManualActionRequiredRevokeSession {
            get {
                return ResourceManager.GetString("ManualActionRequiredRevokeSession", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à After 3 seconds, the session is revoked, and the user agent is automatically redirected to the client.
        /// </summary>
        public static string ManualActionRequiredRevokeSessionTooltip {
            get {
                return ResourceManager.GetString("ManualActionRequiredRevokeSessionTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Manual Identity Provisioning.
        /// </summary>
        public static string ManualIdentityProvisioning {
            get {
                return ResourceManager.GetString("ManualIdentityProvisioning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Map one claim to a user attribute.
        /// </summary>
        public static string MapClaimToUserAttribute {
            get {
                return ResourceManager.GetString("MapClaimToUserAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Mapper details.
        /// </summary>
        public static string MapperDetails {
            get {
                return ResourceManager.GetString("MapperDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Mappers.
        /// </summary>
        public static string Mappers {
            get {
                return ResourceManager.GetString("Mappers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Mapper Type.
        /// </summary>
        public static string MapperType {
            get {
                return ResourceManager.GetString("MapperType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Mapping rules.
        /// </summary>
        public static string MappingRules {
            get {
                return ResourceManager.GetString("MappingRules", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Map to one user claim.
        /// </summary>
        public static string MapToOneUserClaim {
            get {
                return ResourceManager.GetString("MapToOneUserClaim", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Map one user attribute to one claim.
        /// </summary>
        public static string MapUserAttributeToClaim {
            get {
                return ResourceManager.GetString("MapUserAttributeToClaim", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Map one user property to one claim.
        /// </summary>
        public static string MapUserPropertyToClaim {
            get {
                return ResourceManager.GetString("MapUserPropertyToClaim", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Metadata URL.
        /// </summary>
        public static string MetadataUrl {
            get {
                return ResourceManager.GetString("MetadataUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Metadata URL is required.
        /// </summary>
        public static string MetadataUrlRequired {
            get {
                return ResourceManager.GetString("MetadataUrlRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Mobile.
        /// </summary>
        public static string Mobile {
            get {
                return ResourceManager.GetString("Mobile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à A desktop or mobile application running on a user&apos;s device.
        /// </summary>
        public static string MobileDescription {
            get {
                return ResourceManager.GetString("MobileDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Authorization code + PKCE.
        /// </summary>
        public static string MobileShortDescription {
            get {
                return ResourceManager.GetString("MobileShortDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Mutual-TLS Client Authentication.
        /// </summary>
        public static string Mtls {
            get {
                return ResourceManager.GetString("Mtls", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à By default, the client is configured to use MTLS authentication. &lt;br/&gt;
        ///The Subject Name of the client certificate must be specified..
        /// </summary>
        public static string MtlsAuthenticationIsEnabled {
            get {
                return ResourceManager.GetString("MtlsAuthenticationIsEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à MTLS authentication is configured by default. &lt;br /&gt;
        ///The Subject Name is used to verify the validity of the Client Certificate..
        /// </summary>
        public static string MtlsProofOfPossessionSubjectNameHelper {
            get {
                return ResourceManager.GetString("MtlsProofOfPossessionSubjectNameHelper", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Multivalued.
        /// </summary>
        public static string Multivalued {
            get {
                return ResourceManager.GetString("Multivalued", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Name.
        /// </summary>
        public static string Name {
            get {
                return ResourceManager.GetString("Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Name is required.
        /// </summary>
        public static string NameIsRequired {
            get {
                return ResourceManager.GetString("NameIsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Number of login attempts.
        /// </summary>
        public static string NbLoginAttempt {
            get {
                return ResourceManager.GetString("NbLoginAttempt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No.
        /// </summary>
        public static string No {
            get {
                return ResourceManager.GetString("No", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à There is no property.
        /// </summary>
        public static string NoProperties {
            get {
                return ResourceManager.GetString("NoProperties", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à You are not authorized.
        /// </summary>
        public static string NotAuthorized {
            get {
                return ResourceManager.GetString("NotAuthorized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Notification mode.
        /// </summary>
        public static string NotificationMode {
            get {
                return ResourceManager.GetString("NotificationMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Notification mode used during Backchannel Authentication.
        /// </summary>
        public static string NotificationModeTooltip {
            get {
                return ResourceManager.GetString("NotificationModeTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Number of days.
        /// </summary>
        public static string NumberOfDays {
            get {
                return ResourceManager.GetString("NumberOfDays", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Number of days the certificate will be valid.
        /// </summary>
        public static string NumberOfDaysDescription {
            get {
                return ResourceManager.GetString("NumberOfDaysDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Number of Days is required.
        /// </summary>
        public static string NumberOfDaysRequired {
            get {
                return ResourceManager.GetString("NumberOfDaysRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à OAUTH.
        /// </summary>
        public static string OAuth {
            get {
                return ResourceManager.GetString("OAuth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à OPENID.
        /// </summary>
        public static string OpenId {
            get {
                return ResourceManager.GetString("OpenId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à OpenID Connect.
        /// </summary>
        public static string OpenIdConnect {
            get {
                return ResourceManager.GetString("OpenIdConnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Options.
        /// </summary>
        public static string Options {
            get {
                return ResourceManager.GetString("Options", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à One Time Password (OTP).
        /// </summary>
        public static string Otp {
            get {
                return ResourceManager.GetString("Otp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à A random and unique password will be generated.
        /// </summary>
        public static string OtpCredDescription {
            get {
                return ResourceManager.GetString("OtpCredDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Password.
        /// </summary>
        public static string Password {
            get {
                return ResourceManager.GetString("Password", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Password confirmation.
        /// </summary>
        public static string PasswordConfirmation {
            get {
                return ResourceManager.GetString("PasswordConfirmation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Generate a static password.
        /// </summary>
        public static string PasswordCredDescription {
            get {
                return ResourceManager.GetString("PasswordCredDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Password is required.
        /// </summary>
        public static string PasswordRequired {
            get {
                return ResourceManager.GetString("PasswordRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Path.
        /// </summary>
        public static string Path {
            get {
                return ResourceManager.GetString("Path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Pending.
        /// </summary>
        public static string Pending {
            get {
                return ResourceManager.GetString("Pending", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Permissions.
        /// </summary>
        public static string Permissions {
            get {
                return ResourceManager.GetString("Permissions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à It introduces a secret generated by the calling application that can be validated by the authorization server..
        /// </summary>
        public static string PKCEDescription {
            get {
                return ResourceManager.GetString("PKCEDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à PKCE.
        /// </summary>
        public static string PKCEName {
            get {
                return ResourceManager.GetString("PKCEName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Private Key.
        /// </summary>
        public static string PrivateKey {
            get {
                return ResourceManager.GetString("PrivateKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Private pem.
        /// </summary>
        public static string PrivatePem {
            get {
                return ResourceManager.GetString("PrivatePem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Process import has been started.
        /// </summary>
        public static string ProcessImportStarted {
            get {
                return ResourceManager.GetString("ProcessImportStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Proof of possession.
        /// </summary>
        public static string ProofOfPossession {
            get {
                return ResourceManager.GetString("ProofOfPossession", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Properties.
        /// </summary>
        public static string Properties {
            get {
                return ResourceManager.GetString("Properties", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Property.
        /// </summary>
        public static string Property {
            get {
                return ResourceManager.GetString("Property", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Name of the property.
        /// </summary>
        public static string PropertyName {
            get {
                return ResourceManager.GetString("PropertyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Protocol.
        /// </summary>
        public static string Protocol {
            get {
                return ResourceManager.GetString("Protocol", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Protocol is required.
        /// </summary>
        public static string ProtocolIsRequired {
            get {
                return ResourceManager.GetString("ProtocolIsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Public Key.
        /// </summary>
        public static string PublicKey {
            get {
                return ResourceManager.GetString("PublicKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Public pem.
        /// </summary>
        public static string PublicPem {
            get {
                return ResourceManager.GetString("PublicPem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Push notification.
        /// </summary>
        public static string PushNotification {
            get {
                return ResourceManager.GetString("PushNotification", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à QR Code.
        /// </summary>
        public static string QrCode {
            get {
                return ResourceManager.GetString("QrCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Realm.
        /// </summary>
        public static string Realm {
            get {
                return ResourceManager.GetString("Realm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Realms has been added.
        /// </summary>
        public static string RealmAdded {
            get {
                return ResourceManager.GetString("RealmAdded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Realm {0} already exists.
        /// </summary>
        public static string RealmExists {
            get {
                return ResourceManager.GetString("RealmExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Realm permissions.
        /// </summary>
        public static string RealmPermissions {
            get {
                return ResourceManager.GetString("RealmPermissions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Select one or more permissions assigned to the realm. You must reconnect to the administration website for the changes to take effect..
        /// </summary>
        public static string RealmPermissionsDescription {
            get {
                return ResourceManager.GetString("RealmPermissionsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Roles have been updated.
        /// </summary>
        public static string RealmRoleScopesUpdated {
            get {
                return ResourceManager.GetString("RealmRoleScopesUpdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Realms.
        /// </summary>
        public static string Realms {
            get {
                return ResourceManager.GetString("Realms", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Redirection URLs.
        /// </summary>
        public static string RedirectionUrls {
            get {
                return ResourceManager.GetString("RedirectionUrls", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Redirection URLs must be passed as a list of URLs separated by &lt;b&gt;;&lt;/b&gt;. &lt;br /&gt; URLs must be valid and must not contain fragments, for example (http://localhost#fragment).
        /// </summary>
        public static string RedirectionUrlsDescription {
            get {
                return ResourceManager.GetString("RedirectionUrlsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Redirection url &apos;{0}&apos; cannot contains fragment (#).
        /// </summary>
        public static string RedirectUriContainsFragment {
            get {
                return ResourceManager.GetString("RedirectUriContainsFragment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Redirect URL is case sensitive.
        /// </summary>
        public static string RedirectUrlCaseSensitive {
            get {
                return ResourceManager.GetString("RedirectUrlCaseSensitive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Redirect URL is case sensitive.
        /// </summary>
        public static string RedirectUrlCaseSensitiveTooltip {
            get {
                return ResourceManager.GetString("RedirectUrlCaseSensitiveTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Reference.
        /// </summary>
        public static string Reference {
            get {
                return ResourceManager.GetString("Reference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Refresh token.
        /// </summary>
        public static string RefreshToken {
            get {
                return ResourceManager.GetString("RefreshToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Registration.
        /// </summary>
        public static string Registration {
            get {
                return ResourceManager.GetString("Registration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Registration methods.
        /// </summary>
        public static string RegistrationMethods {
            get {
                return ResourceManager.GetString("RegistrationMethods", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Registration.
        /// </summary>
        public static string RegistrationWorkflow {
            get {
                return ResourceManager.GetString("RegistrationWorkflow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Registration workflow &apos;{0}&apos; has been added.
        /// </summary>
        public static string RegistrationWorkflowAdded {
            get {
                return ResourceManager.GetString("RegistrationWorkflowAdded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Registration Workflows.
        /// </summary>
        public static string RegistrationWorkflows {
            get {
                return ResourceManager.GetString("RegistrationWorkflows", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Registration workflow &apos;{0}&apos; has been updated.
        /// </summary>
        public static string RegistrationWorkflowUpdated {
            get {
                return ResourceManager.GetString("RegistrationWorkflowUpdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Reject.
        /// </summary>
        public static string Reject {
            get {
                return ResourceManager.GetString("Reject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Rejected.
        /// </summary>
        public static string Rejected {
            get {
                return ResourceManager.GetString("Rejected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à {0} errors.
        /// </summary>
        public static string RelaunchErrors {
            get {
                return ResourceManager.GetString("RelaunchErrors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Remove.
        /// </summary>
        public static string Remove {
            get {
                return ResourceManager.GetString("Remove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Remove subject claim mapper.
        /// </summary>
        public static string RemoveSubjectClaimMapper {
            get {
                return ResourceManager.GetString("RemoveSubjectClaimMapper", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Request.
        /// </summary>
        public static string Request {
            get {
                return ResourceManager.GetString("Request", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Value is required.
        /// </summary>
        public static string Required {
            get {
                return ResourceManager.GetString("Required", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Reset.
        /// </summary>
        public static string Reset {
            get {
                return ResourceManager.GetString("Reset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Resolve roles.
        /// </summary>
        public static string ResolveRoles {
            get {
                return ResourceManager.GetString("ResolveRoles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Resource.
        /// </summary>
        public static string Resource {
            get {
                return ResourceManager.GetString("Resource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Resources.
        /// </summary>
        public static string Resources {
            get {
                return ResourceManager.GetString("Resources", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Resource type.
        /// </summary>
        public static string ResourceType {
            get {
                return ResourceManager.GetString("ResourceType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Response types.
        /// </summary>
        public static string ResponseTypes {
            get {
                return ResourceManager.GetString("ResponseTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Informs the Authorization Server of the desired authorization processing flow, including what parameters are returned from the endpoints used..
        /// </summary>
        public static string ResponseTypesTooltip {
            get {
                return ResourceManager.GetString("ResponseTypesTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Revoke.
        /// </summary>
        public static string Revoke {
            get {
                return ResourceManager.GetString("Revoke", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Revoke sessions.
        /// </summary>
        public static string RevokeSessions {
            get {
                return ResourceManager.GetString("RevokeSessions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Role.
        /// </summary>
        public static string Role {
            get {
                return ResourceManager.GetString("Role", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Roles.
        /// </summary>
        public static string Roles {
            get {
                return ResourceManager.GetString("Roles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Create and manage Groups for your Applications. Groups contain collections of Permissions and can be assigned to Users..
        /// </summary>
        public static string RolesDescription {
            get {
                return ResourceManager.GetString("RolesDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Passwords should be the same.
        /// </summary>
        public static string SamePassword {
            get {
                return ResourceManager.GetString("SamePassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à SAML.
        /// </summary>
        public static string Saml {
            get {
                return ResourceManager.GetString("Saml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à SAML Attribute Name.
        /// </summary>
        public static string SamlAttributeName {
            get {
                return ResourceManager.GetString("SamlAttributeName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à SAML Attribute Name.
        /// </summary>
        public static string SamlAttributeNameDescription {
            get {
                return ResourceManager.GetString("SamlAttributeNameDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à SAML Attribute Name is required.
        /// </summary>
        public static string SamlAttributeNameRequired {
            get {
                return ResourceManager.GetString("SamlAttributeNameRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à SAML SP.
        /// </summary>
        public static string SamlSp {
            get {
                return ResourceManager.GetString("SamlSp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à A Service Provider (SP) is the entity providing the service, typically in the form of an application.
        /// </summary>
        public static string SamlSpDescription {
            get {
                return ResourceManager.GetString("SamlSpDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à SAML Service Provider.
        /// </summary>
        public static string SamlSpShortDescription {
            get {
                return ResourceManager.GetString("SamlSpShortDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Save.
        /// </summary>
        public static string Save {
            get {
                return ResourceManager.GetString("Save", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Saving....
        /// </summary>
        public static string Saving {
            get {
                return ResourceManager.GetString("Saving", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à SCIM endpoint.
        /// </summary>
        public static string ScimEdp {
            get {
                return ResourceManager.GetString("ScimEdp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Scope &apos;{0}&apos; is added.
        /// </summary>
        public static string ScopeAdded {
            get {
                return ResourceManager.GetString("ScopeAdded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Resource with the name &apos;{0}&apos; already exists.
        /// </summary>
        public static string ScopeAlreadyExists {
            get {
                return ResourceManager.GetString("ScopeAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Claim mapper has been added.
        /// </summary>
        public static string ScopeClaimMapperAdded {
            get {
                return ResourceManager.GetString("ScopeClaimMapperAdded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Name must be unique.
        /// </summary>
        public static string ScopeClaimMapperNameMustBeUnique {
            get {
                return ResourceManager.GetString("ScopeClaimMapperNameMustBeUnique", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à SAML Attribute Name must be unique.
        /// </summary>
        public static string ScopeClaimMapperSAMLAttributeNameMustBeUnique {
            get {
                return ResourceManager.GetString("ScopeClaimMapperSAMLAttributeNameMustBeUnique", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Token Claim Name must be unique.
        /// </summary>
        public static string ScopeClaimMapperTokenClaimNameMustBeUnique {
            get {
                return ResourceManager.GetString("ScopeClaimMapperTokenClaimNameMustBeUnique", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Scope Claim Mapper has been updated.
        /// </summary>
        public static string ScopeClaimMapperUpdated {
            get {
                return ResourceManager.GetString("ScopeClaimMapperUpdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Scope details.
        /// </summary>
        public static string ScopeDetails {
            get {
                return ResourceManager.GetString("ScopeDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Scope details have been updated.
        /// </summary>
        public static string ScopeDetailsUpdated {
            get {
                return ResourceManager.GetString("ScopeDetailsUpdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Scope resource is added.
        /// </summary>
        public static string ScopeResourceAdded {
            get {
                return ResourceManager.GetString("ScopeResourceAdded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Select one or more active &lt;b&gt;API resources&lt;/b&gt;  for the scope. The &lt;b&gt;aud&lt;/b&gt; claim is populated with the relevant &lt;b&gt;API resources&lt;/b&gt;. This claim is utilized by the API during the authorization process.
        /// </summary>
        public static string ScopeResourcesDescription {
            get {
                return ResourceManager.GetString("ScopeResourcesDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Scope resources have been removed.
        /// </summary>
        public static string ScopeResourcesRemoved {
            get {
                return ResourceManager.GetString("ScopeResourcesRemoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Scope Resources have been updated.
        /// </summary>
        public static string ScopeResourcesUpdated {
            get {
                return ResourceManager.GetString("ScopeResourcesUpdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Scopes.
        /// </summary>
        public static string Scopes {
            get {
                return ResourceManager.GetString("Scopes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Specify the precise actions or resources that a client application can access on behalf of an end-user..
        /// </summary>
        public static string ScopesDescription {
            get {
                return ResourceManager.GetString("ScopesDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Secret.
        /// </summary>
        public static string Secret {
            get {
                return ResourceManager.GetString("Secret", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Secret is required.
        /// </summary>
        public static string SecretIsRequired {
            get {
                return ResourceManager.GetString("SecretIsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Secret is required.
        /// </summary>
        public static string SecretRequired {
            get {
                return ResourceManager.GetString("SecretRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Select.
        /// </summary>
        public static string Select {
            get {
                return ResourceManager.GetString("Select", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Select one or more authentication methods and update the order. The order is important as it determines the sequence of actions for authenticating the end-user..
        /// </summary>
        public static string SelectAmrsHelper {
            get {
                return ResourceManager.GetString("SelectAmrsHelper", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The client will be configured to use &lt;b&gt;private_key_jwt&lt;/b&gt; authentication method. &lt;br /&gt;
        ///A Signature Key with algorithm &lt;b&gt;ES256&lt;/b&gt; will be added. &lt;br /&gt;
        ///The &lt;b&gt;authorization_signed_response_alg&lt;/b&gt; will be set to &lt;b&gt;ES256&lt;/b&gt;. This value is used by Identity Server during the generation of the authorization response (JARM)..
        /// </summary>
        public static string SelectDpopProofOfPossessionHelper {
            get {
                return ResourceManager.GetString("SelectDpopProofOfPossessionHelper", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Selected ACRS have been removed.
        /// </summary>
        public static string SelectedAcrsRemoved {
            get {
                return ResourceManager.GetString("SelectedAcrsRemoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Selected Certificate Authorities has been removed.
        /// </summary>
        public static string SelectedCertificateAuthoritiesRemoved {
            get {
                return ResourceManager.GetString("SelectedCertificateAuthoritiesRemoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Selected Client Certificates have been removed.
        /// </summary>
        public static string SelectedClientCertificatesRemoved {
            get {
                return ResourceManager.GetString("SelectedClientCertificatesRemoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Selected client keys have been removed.
        /// </summary>
        public static string SelectedClientKeysRemoved {
            get {
                return ResourceManager.GetString("SelectedClientKeysRemoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Selected client roles have been removed.
        /// </summary>
        public static string SelectedClientRolesRemoved {
            get {
                return ResourceManager.GetString("SelectedClientRolesRemoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Selected client scopes have been removed.
        /// </summary>
        public static string SelectedClientScopesRemoved {
            get {
                return ResourceManager.GetString("SelectedClientScopesRemoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Selected clients have been removed.
        /// </summary>
        public static string SelectedClientsRemoved {
            get {
                return ResourceManager.GetString("SelectedClientsRemoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Selected credential offers have been removed.
        /// </summary>
        public static string SelectedCredentialOffersRemoved {
            get {
                return ResourceManager.GetString("SelectedCredentialOffersRemoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Selected credentials subjects are removed.
        /// </summary>
        public static string SelectedCredentialSubjectsRemoved {
            get {
                return ResourceManager.GetString("SelectedCredentialSubjectsRemoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Selected displays have been removed.
        /// </summary>
        public static string SelectedCredentialTemplateDisplaysRemoved {
            get {
                return ResourceManager.GetString("SelectedCredentialTemplateDisplaysRemoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Selected credential templates are removed.
        /// </summary>
        public static string SelectedCredentialTemplatesRemoved {
            get {
                return ResourceManager.GetString("SelectedCredentialTemplatesRemoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Selected ethereum networks have been removed.
        /// </summary>
        public static string SelectedEthrNetworksRemoved {
            get {
                return ResourceManager.GetString("SelectedEthrNetworksRemoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The selected federation entities have been removed.
        /// </summary>
        public static string SelectedFederationEntitiesRemoved {
            get {
                return ResourceManager.GetString("SelectedFederationEntitiesRemoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Selected grants have been rejected.
        /// </summary>
        public static string SelectedGrantsRemoved {
            get {
                return ResourceManager.GetString("SelectedGrantsRemoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Selected groups have been removed.
        /// </summary>
        public static string SelectedGroupsRemoved {
            get {
                return ResourceManager.GetString("SelectedGroupsRemoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Mapping rules have been removed.
        /// </summary>
        public static string SelectedIdentityProvisioningMappingRulesRemoved {
            get {
                return ResourceManager.GetString("SelectedIdentityProvisioningMappingRulesRemoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Selected Identity Provisioning has been removed.
        /// </summary>
        public static string SelectedIdentityProvisioningRemoved {
            get {
                return ResourceManager.GetString("SelectedIdentityProvisioningRemoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Selected mappers have been removed.
        /// </summary>
        public static string SelectedIdProviderMappersRemoved {
            get {
                return ResourceManager.GetString("SelectedIdProviderMappersRemoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Selected Identity Providers have been removed.
        /// </summary>
        public static string SelectedIdProvidersRemoved {
            get {
                return ResourceManager.GetString("SelectedIdProvidersRemoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the selected realm roles are removed.
        /// </summary>
        public static string SelectedRealmRolesRemoved {
            get {
                return ResourceManager.GetString("SelectedRealmRolesRemoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Selected registration workflows have been removed.
        /// </summary>
        public static string SelectedRegistrationWorkflowRemoved {
            get {
                return ResourceManager.GetString("SelectedRegistrationWorkflowRemoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Scope mappers have been removed.
        /// </summary>
        public static string SelectedScopesMappersRemoved {
            get {
                return ResourceManager.GetString("SelectedScopesMappersRemoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Selected scopes have been removed.
        /// </summary>
        public static string SelectedScopesRemoved {
            get {
                return ResourceManager.GetString("SelectedScopesRemoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Selected users are removed.
        /// </summary>
        public static string SelectedUsersRemoved {
            get {
                return ResourceManager.GetString("SelectedUsersRemoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The client will be configured to use &lt;b&gt;tls_client_auth&lt;/b&gt; authentication method. &lt;br /&gt;
        ///A Signature Key with algorithm &lt;b&gt;ES256&lt;/b&gt; will be added. &lt;br /&gt;
        ///The &lt;b&gt;authorization_signed_response_alg&lt;/b&gt; will be set to &lt;b&gt;ES256&lt;/b&gt;. This value is used by Identity Server during the generation of the authorization response (JARM)..
        /// </summary>
        public static string SelectMtlsProofOfPossessionHelper {
            get {
                return ResourceManager.GetString("SelectMtlsProofOfPossessionHelper", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Select Authentication Methods.
        /// </summary>
        public static string SelectOneOrMoreAuthMethods {
            get {
                return ResourceManager.GetString("SelectOneOrMoreAuthMethods", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Select one or more registration methods and update the order. The order is important as it determines the sequence of actions for registering the end-user..
        /// </summary>
        public static string SelectOneOrMoreAuthMethodsHelper {
            get {
                return ResourceManager.GetString("SelectOneOrMoreAuthMethodsHelper", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Please select a &lt;b&gt;Proof of Possession mechanism&lt;/b&gt;. Access tokens are securely linked to a specific cryptographic key, ensuring that only the sender possesses this key..
        /// </summary>
        public static string SelectProofOfPossessionHelper {
            get {
                return ResourceManager.GetString("SelectProofOfPossessionHelper", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Select realm.
        /// </summary>
        public static string SelectRealm {
            get {
                return ResourceManager.GetString("SelectRealm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Select response types.
        /// </summary>
        public static string SelectResponseTypes {
            get {
                return ResourceManager.GetString("SelectResponseTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The application utilizes a self-signed certificate. The public key of the certificate (RSA or EC) must be provided to the Identity Server either as a value in JWKS (JSON Web Key Set) format or as a URL using the jwks_uri..
        /// </summary>
        public static string SelfSignedX509CertificateDescription {
            get {
                return ResourceManager.GetString("SelfSignedX509CertificateDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Self Signed X509 Certificate.
        /// </summary>
        public static string SelfSignedX509CertificateName {
            get {
                return ResourceManager.GetString("SelfSignedX509CertificateName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Sessions.
        /// </summary>
        public static string Sessions {
            get {
                return ResourceManager.GetString("Sessions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Set the name of the group.
        /// </summary>
        public static string SetGroupName {
            get {
                return ResourceManager.GetString("SetGroupName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Show data.
        /// </summary>
        public static string ShowData {
            get {
                return ResourceManager.GetString("ShowData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à SimpleIdServer Administration UI.
        /// </summary>
        public static string SidAdminUi {
            get {
                return ResourceManager.GetString("SidAdminUi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Signature key has been added.
        /// </summary>
        public static string SigKeyAdded {
            get {
                return ResourceManager.GetString("SigKeyAdded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Signature key &apos;{0}&apos; already exists.
        /// </summary>
        public static string SigKeyAlreadyExists {
            get {
                return ResourceManager.GetString("SigKeyAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Signature Key.
        /// </summary>
        public static string SignatureKey {
            get {
                return ResourceManager.GetString("SignatureKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à request object, private_key_jwt and client_secret_jwt.
        /// </summary>
        public static string SignatureKeyParameters {
            get {
                return ResourceManager.GetString("SignatureKeyParameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The application constructs a JWT assertion that includes a message authentication code (MAC) in its signature component, and includes it in the request..
        /// </summary>
        public static string SignedJwtClientSecretDescription {
            get {
                return ResourceManager.GetString("SignedJwtClientSecretDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Signed JWT with Client Secret.
        /// </summary>
        public static string SignedJwtClientSecretName {
            get {
                return ResourceManager.GetString("SignedJwtClientSecretName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The application creates a digitally signed JWT assertion and includes it in the request..
        /// </summary>
        public static string SignedJwtDescription {
            get {
                return ResourceManager.GetString("SignedJwtDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Signed jwt.
        /// </summary>
        public static string SignedJwtName {
            get {
                return ResourceManager.GetString("SignedJwtName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Sign out.
        /// </summary>
        public static string SignOut {
            get {
                return ResourceManager.GetString("SignOut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Source.
        /// </summary>
        public static string Source {
            get {
                return ResourceManager.GetString("Source", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Source Claim Name.
        /// </summary>
        public static string SourceClaimName {
            get {
                return ResourceManager.GetString("SourceClaimName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Source Claim name is required.
        /// </summary>
        public static string SourceClaimNameRequired {
            get {
                return ResourceManager.GetString("SourceClaimNameRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Does the source contain more than one value ?.
        /// </summary>
        public static string SourceContainsMoreThanOneValue {
            get {
                return ResourceManager.GetString("SourceContainsMoreThanOneValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Standard.
        /// </summary>
        public static string Standard {
            get {
                return ResourceManager.GetString("Standard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Start Datetime.
        /// </summary>
        public static string StartDatetime {
            get {
                return ResourceManager.GetString("StartDatetime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Start export.
        /// </summary>
        public static string StartExport {
            get {
                return ResourceManager.GetString("StartExport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Start import.
        /// </summary>
        public static string StartImport {
            get {
                return ResourceManager.GetString("StartImport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à State.
        /// </summary>
        public static string State {
            get {
                return ResourceManager.GetString("State", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Status.
        /// </summary>
        public static string Status {
            get {
                return ResourceManager.GetString("Status", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Store Location.
        /// </summary>
        public static string StoreLocation {
            get {
                return ResourceManager.GetString("StoreLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Store name.
        /// </summary>
        public static string StoreName {
            get {
                return ResourceManager.GetString("StoreName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Subject.
        /// </summary>
        public static string Subject {
            get {
                return ResourceManager.GetString("Subject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Subject Name.
        /// </summary>
        public static string SubjectName {
            get {
                return ResourceManager.GetString("SubjectName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Contains identifying information about the entity to which the certificate is issued. &lt;br /&gt; It must starts with &lt;b&gt;CN=&lt;/b&gt;.
        /// </summary>
        public static string SubjectNameDescription {
            get {
                return ResourceManager.GetString("SubjectNameDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Subject Name is required.
        /// </summary>
        public static string SubjectNameRequired {
            get {
                return ResourceManager.GetString("SubjectNameRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Subject Distinguished Name.
        /// </summary>
        public static string SubjetDistinguishedName {
            get {
                return ResourceManager.GetString("SubjetDistinguishedName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Successful authentication today.
        /// </summary>
        public static string SuccessAuthentication {
            get {
                return ResourceManager.GetString("SuccessAuthentication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Summary.
        /// </summary>
        public static string Summary {
            get {
                return ResourceManager.GetString("Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Able to receive notifications from the identity server.
        /// </summary>
        public static string SupportPushNotification {
            get {
                return ResourceManager.GetString("SupportPushNotification", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Support user authentication.
        /// </summary>
        public static string SupportUserAuthentication {
            get {
                return ResourceManager.GetString("SupportUserAuthentication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Support user registration.
        /// </summary>
        public static string SupportUserRegistration {
            get {
                return ResourceManager.GetString("SupportUserRegistration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à To.
        /// </summary>
        public static string To {
            get {
                return ResourceManager.GetString("To", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Token claim name.
        /// </summary>
        public static string TokenClaimName {
            get {
                return ResourceManager.GetString("TokenClaimName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Name of the claim to insert into the token.
        /// </summary>
        public static string TokenClaimNameDescription {
            get {
                return ResourceManager.GetString("TokenClaimNameDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Token claim name is required.
        /// </summary>
        public static string TokenClaimNameRequired {
            get {
                return ResourceManager.GetString("TokenClaimNameRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Token exchange.
        /// </summary>
        public static string TokenExchange {
            get {
                return ResourceManager.GetString("TokenExchange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Token exchange pre-authorized code.
        /// </summary>
        public static string TokenExchangePreAuthorizedCode {
            get {
                return ResourceManager.GetString("TokenExchangePreAuthorizedCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Type of token exchange.
        /// </summary>
        public static string TokenExchangeType {
            get {
                return ResourceManager.GetString("TokenExchangeType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Token expiration time.
        /// </summary>
        public static string TokenExpirationTime {
            get {
                return ResourceManager.GetString("TokenExpirationTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Set the token duration in seconds; by default, the value is 30 minutes..
        /// </summary>
        public static string TokenExpirationTimeTooltip {
            get {
                return ResourceManager.GetString("TokenExpirationTimeTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Token signature algorithm.
        /// </summary>
        public static string TokenSignatureAlg {
            get {
                return ResourceManager.GetString("TokenSignatureAlg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à JWA algorithm used for signing access tokens.
        /// </summary>
        public static string TokenSignatureAlgTooltip {
            get {
                return ResourceManager.GetString("TokenSignatureAlgTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Time-based One-Time Password (TOTP) is a time-based OTP. The seed for TOTP is static, just like in HOTP, but the moving factor in TOTP is time-based rather than counter-based..
        /// </summary>
        public static string TotpDescription {
            get {
                return ResourceManager.GetString("TotpDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Trust anchor.
        /// </summary>
        public static string TrustAnchor {
            get {
                return ResourceManager.GetString("TrustAnchor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Trust anchor has been added.
        /// </summary>
        public static string TrustAnchorAdded {
            get {
                return ResourceManager.GetString("TrustAnchorAdded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à A Trust Anchor is an Entity whose main purpose is to issue statements about Entities.
        /// </summary>
        public static string TrustAnchorDescription {
            get {
                return ResourceManager.GetString("TrustAnchorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à TODO.
        /// </summary>
        public static string TrustAnchorsDescription {
            get {
                return ResourceManager.GetString("TrustAnchorsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Entity that represents a trusted third party.
        /// </summary>
        public static string TrustAnchorShortDescription {
            get {
                return ResourceManager.GetString("TrustAnchorShortDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Trust anchors.
        /// </summary>
        public static string TrustAnchorsTitle {
            get {
                return ResourceManager.GetString("TrustAnchorsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Trust entity.
        /// </summary>
        public static string TrustEntity {
            get {
                return ResourceManager.GetString("TrustEntity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Try to extract the users.
        /// </summary>
        public static string TryExtractUsers {
            get {
                return ResourceManager.GetString("TryExtractUsers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Type.
        /// </summary>
        public static string Type {
            get {
                return ResourceManager.GetString("Type", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à UMA.
        /// </summary>
        public static string UMA {
            get {
                return ResourceManager.GetString("UMA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Unassign.
        /// </summary>
        public static string Unassign {
            get {
                return ResourceManager.GetString("Unassign", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Unassign realms.
        /// </summary>
        public static string UnassignRealms {
            get {
                return ResourceManager.GetString("UnassignRealms", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Unassign.
        /// </summary>
        public static string UnassignResources {
            get {
                return ResourceManager.GetString("UnassignResources", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Unblock datetime.
        /// </summary>
        public static string UnblockDateTime {
            get {
                return ResourceManager.GetString("UnblockDateTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The client &apos;{0}&apos; doesn&apos;t exist.
        /// </summary>
        public static string UnknownClient {
            get {
                return ResourceManager.GetString("UnknownClient", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Group doesn&apos;t exist.
        /// </summary>
        public static string UnknownGroup {
            get {
                return ResourceManager.GetString("UnknownGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The identity provisioning doesn&apos;t exist.
        /// </summary>
        public static string UnknownIdentityProvisioning {
            get {
                return ResourceManager.GetString("UnknownIdentityProvisioning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Identity provider &apos;{0}&apos; doesn&apos;t exist.
        /// </summary>
        public static string UnknownIdProvider {
            get {
                return ResourceManager.GetString("UnknownIdProvider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The resource &apos;{0}&apos; doesn&apos;t exist.
        /// </summary>
        public static string UnknownResource {
            get {
                return ResourceManager.GetString("UnknownResource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The user &apos;{0}&apos; doesn&apos;t exist.
        /// </summary>
        public static string UnknownUser {
            get {
                return ResourceManager.GetString("UnknownUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Unlink.
        /// </summary>
        public static string Unlink {
            get {
                return ResourceManager.GetString("Unlink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Update.
        /// </summary>
        public static string Update {
            get {
                return ResourceManager.GetString("Update", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Update credential.
        /// </summary>
        public static string UpdateCredential {
            get {
                return ResourceManager.GetString("UpdateCredential", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Updated at.
        /// </summary>
        public static string UpdatedAt {
            get {
                return ResourceManager.GetString("UpdatedAt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Update datetime.
        /// </summary>
        public static string UpdateDateTime {
            get {
                return ResourceManager.GetString("UpdateDateTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Updating....
        /// </summary>
        public static string Updating {
            get {
                return ResourceManager.GetString("Updating", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Url.
        /// </summary>
        public static string Url {
            get {
                return ResourceManager.GetString("Url", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Url is required.
        /// </summary>
        public static string UrlIsRequired {
            get {
                return ResourceManager.GetString("UrlIsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à URL is required.
        /// </summary>
        public static string UrlRequired {
            get {
                return ResourceManager.GetString("UrlRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Usage.
        /// </summary>
        public static string Usage {
            get {
                return ResourceManager.GetString("Usage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Use artifact.
        /// </summary>
        public static string UseArtifact {
            get {
                return ResourceManager.GetString("UseArtifact", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Utilize the Certificate Authority from your local Certificate Store. The Certificate must contain a &lt;b&gt;Private Key&lt;/b&gt;, which will be used to generate the Client Certificate..
        /// </summary>
        public static string UseCertificateStoreDescription {
            get {
                return ResourceManager.GetString("UseCertificateStoreDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Use Certificate Store.
        /// </summary>
        public static string UseCertificateStoreName {
            get {
                return ResourceManager.GetString("UseCertificateStoreName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Use JWKS URL.
        /// </summary>
        public static string UseJwksUrl {
            get {
                return ResourceManager.GetString("UseJwksUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à If the &apos;Use JWKS URL&apos; switch is enabled, you need to provide a valid JWKS URL. After saving, the administrator can download keys from the JWKS URL..
        /// </summary>
        public static string UseJwksUrlHelper {
            get {
                return ResourceManager.GetString("UseJwksUrlHelper", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à A new user has been added.
        /// </summary>
        public static string UserAdded {
            get {
                return ResourceManager.GetString("UserAdded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à User attribute.
        /// </summary>
        public static string UserAttribute {
            get {
                return ResourceManager.GetString("UserAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à User attribute is required.
        /// </summary>
        public static string UserAttributeRequired {
            get {
                return ResourceManager.GetString("UserAttributeRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à User Agent Based application.
        /// </summary>
        public static string UserBasedApp {
            get {
                return ResourceManager.GetString("UserBasedApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à A client-side application running in a browser (Angular, EmberJS, VueJS etc...). &lt;br/&gt; Client secret and/or refresh tokens cannot be stored by these applications because there is a security risk..
        /// </summary>
        public static string UserBasedAppDescription {
            get {
                return ResourceManager.GetString("UserBasedAppDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Authorization code + PKCE.
        /// </summary>
        public static string UserBasedAppShortDescription {
            get {
                return ResourceManager.GetString("UserBasedAppShortDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à User claims.
        /// </summary>
        public static string UserClaims {
            get {
                return ResourceManager.GetString("UserClaims", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à User claims has been updated.
        /// </summary>
        public static string UserClaimsUpdated {
            get {
                return ResourceManager.GetString("UserClaimsUpdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à User consent has been rejected.
        /// </summary>
        public static string UserConsentRejected {
            get {
                return ResourceManager.GetString("UserConsentRejected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à List of consents accepted by the user for specific clients..
        /// </summary>
        public static string UserConsentsDescription {
            get {
                return ResourceManager.GetString("UserConsentsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à User credential has been added.
        /// </summary>
        public static string UserCredentialAdded {
            get {
                return ResourceManager.GetString("UserCredentialAdded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à User credential is removed.
        /// </summary>
        public static string UserCredentialRemoved {
            get {
                return ResourceManager.GetString("UserCredentialRemoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à List of user credentials. Only one credential per type can be enabled..
        /// </summary>
        public static string UserCredentialsDescription {
            get {
                return ResourceManager.GetString("UserCredentialsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à User credential is updated.
        /// </summary>
        public static string UserCredentialUpdated {
            get {
                return ResourceManager.GetString("UserCredentialUpdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à User details.
        /// </summary>
        public static string UserDetails {
            get {
                return ResourceManager.GetString("UserDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à User details have been updated.
        /// </summary>
        public static string UserDetailsUpdated {
            get {
                return ResourceManager.GetString("UserDetailsUpdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à User groups have been assigned.
        /// </summary>
        public static string UserGroupsAssigned {
            get {
                return ResourceManager.GetString("UserGroupsAssigned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à List of groups assigned to the user..
        /// </summary>
        public static string UserGroupsDescription {
            get {
                return ResourceManager.GetString("UserGroupsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à User identifier.
        /// </summary>
        public static string UserIdentifier {
            get {
                return ResourceManager.GetString("UserIdentifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Map one claim to a user identifier.
        /// </summary>
        public static string UserIdentifierDescription {
            get {
                return ResourceManager.GetString("UserIdentifierDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Options have been updated.
        /// </summary>
        public static string UserLockingOptionsUpdated {
            get {
                return ResourceManager.GetString("UserLockingOptionsUpdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à User management.
        /// </summary>
        public static string UserMgt {
            get {
                return ResourceManager.GetString("UserMgt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à User Name.
        /// </summary>
        public static string UserName {
            get {
                return ResourceManager.GetString("UserName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à List of external identification providers (such as Facebook and Google) linked to the user&apos;s profile..
        /// </summary>
        public static string UserProfilesDescription {
            get {
                return ResourceManager.GetString("UserProfilesDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à User property.
        /// </summary>
        public static string UserProperty {
            get {
                return ResourceManager.GetString("UserProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Map one claim to a user property.
        /// </summary>
        public static string UserPropertyDescription {
            get {
                return ResourceManager.GetString("UserPropertyDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à User property is required.
        /// </summary>
        public static string UserPropertyRequired {
            get {
                return ResourceManager.GetString("UserPropertyRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à User roles have been unassigned.
        /// </summary>
        public static string UserRolesUnassigned {
            get {
                return ResourceManager.GetString("UserRolesUnassigned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Users.
        /// </summary>
        public static string Users {
            get {
                return ResourceManager.GetString("Users", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à An easy way to manage user identities, handle credentials, and assign or remove groups..
        /// </summary>
        public static string UsersDescription {
            get {
                return ResourceManager.GetString("UsersDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à User session has been rejected.
        /// </summary>
        public static string UserSessionRejected {
            get {
                return ResourceManager.GetString("UserSessionRejected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à List of active/inactive user sessions..
        /// </summary>
        public static string UserSessionsDescription {
            get {
                return ResourceManager.GetString("UserSessionsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à User subject.
        /// </summary>
        public static string UserSubject {
            get {
                return ResourceManager.GetString("UserSubject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Map one claim to a user subject.
        /// </summary>
        public static string UserSubjectDescription {
            get {
                return ResourceManager.GetString("UserSubjectDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Validation post logout redirect URIs.
        /// </summary>
        public static string ValidationPostLogoutRedirectUris {
            get {
                return ResourceManager.GetString("ValidationPostLogoutRedirectUris", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Array of URLs supplied by the RP to which it MAY request that the End-User&apos;s User Agent be redirected using the post_logout_redirect_uri parameter after a logout has been performed. &lt;br /&gt; Post Logout URLs must be passed as a list of URL separated by ;.
        /// </summary>
        public static string ValidationPostLogoutRedirectUrisTooltip {
            get {
                return ResourceManager.GetString("ValidationPostLogoutRedirectUrisTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Validation redirection URIs.
        /// </summary>
        public static string ValidationRedirectionUris {
            get {
                return ResourceManager.GetString("ValidationRedirectionUris", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Valid URI pattern a browser can redirect to after a successful login. &lt;br /&gt; Redirection URLs must be passed as a list of URL separated by ;.
        /// </summary>
        public static string ValidationRedirectionUrisTooltip {
            get {
                return ResourceManager.GetString("ValidationRedirectionUrisTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Valid from.
        /// </summary>
        public static string ValidFrom {
            get {
                return ResourceManager.GetString("ValidFrom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Valid to.
        /// </summary>
        public static string ValidTo {
            get {
                return ResourceManager.GetString("ValidTo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Value.
        /// </summary>
        public static string Value {
            get {
                return ResourceManager.GetString("Value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The value must be greater than 1.
        /// </summary>
        public static string ValueMustBePositive {
            get {
                return ResourceManager.GetString("ValueMustBePositive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Value is required.
        /// </summary>
        public static string ValueRequired {
            get {
                return ResourceManager.GetString("ValueRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à View.
        /// </summary>
        public static string View {
            get {
                return ResourceManager.GetString("View", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Wallet.
        /// </summary>
        public static string Wallet {
            get {
                return ResourceManager.GetString("Wallet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Utilize the mobile application as an electronic wallet.
        /// </summary>
        public static string WalletDescription {
            get {
                return ResourceManager.GetString("WalletDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Mobile application.
        /// </summary>
        public static string WalletShortDescription {
            get {
                return ResourceManager.GetString("WalletShortDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Web application.
        /// </summary>
        public static string WebApp {
            get {
                return ResourceManager.GetString("WebApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Web application executed on server (ASP.NET CORE, SPRING etc...).
        /// </summary>
        public static string WebAppDescription {
            get {
                return ResourceManager.GetString("WebAppDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Authorization code.
        /// </summary>
        public static string WebAppShortDescription {
            get {
                return ResourceManager.GetString("WebAppShortDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à WebAuthn.
        /// </summary>
        public static string WebAuthn {
            get {
                return ResourceManager.GetString("WebAuthn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Welcome {0}.
        /// </summary>
        public static string Welcome {
            get {
                return ResourceManager.GetString("Welcome", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Workflow.
        /// </summary>
        public static string Workflow {
            get {
                return ResourceManager.GetString("Workflow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à WS-Federation.
        /// </summary>
        public static string WsFederation {
            get {
                return ResourceManager.GetString("WsFederation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à WS-Fed Relying Party.
        /// </summary>
        public static string WsRelyingParty {
            get {
                return ResourceManager.GetString("WsRelyingParty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à A WS-Federation relying party commonly used by older Microsoft applications.
        /// </summary>
        public static string WsRelyingPartyDescription {
            get {
                return ResourceManager.GetString("WsRelyingPartyDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à WS-Federation application.
        /// </summary>
        public static string WsRelyingPartyShortDescription {
            get {
                return ResourceManager.GetString("WsRelyingPartyShortDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The application employs a certificate issued by a trusted Certificate Authority (CA)..
        /// </summary>
        public static string X509CertificateDescription {
            get {
                return ResourceManager.GetString("X509CertificateDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à X509 Certificate.
        /// </summary>
        public static string X509CertificateName {
            get {
                return ResourceManager.GetString("X509CertificateName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Yes.
        /// </summary>
        public static string Yes {
            get {
                return ResourceManager.GetString("Yes", resourceCulture);
            }
        }
    }
}
