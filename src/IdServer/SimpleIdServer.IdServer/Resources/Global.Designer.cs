//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SimpleIdServer.IdServer.Resources {
    using System;
    
    
    /// <summary>
    ///   Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
    /// </summary>
    // Cette classe a été générée automatiquement par la classe StronglyTypedResourceBuilder
    // à l'aide d'un outil, tel que ResGen ou Visual Studio.
    // Pour ajouter ou supprimer un membre, modifiez votre fichier .ResX, puis réexécutez ResGen
    // avec l'option /str ou régénérez votre projet VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Global {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Global() {
        }
        
        /// <summary>
        ///   Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SimpleIdServer.IdServer.Resources.Global", typeof(Global).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Remplace la propriété CurrentUICulture du thread actuel pour toutes
        ///   les recherches de ressources à l'aide de cette classe de ressource fortement typée.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à access has been revoked by the resource owner.
        /// </summary>
        public static string AccessRevokedByResourceOwner {
            get {
                return ResourceManager.GetString("AccessRevokedByResourceOwner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à access token has been rejected.
        /// </summary>
        public static string AccessTokenRejected {
            get {
                return ResourceManager.GetString("AccessTokenRejected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à access token can be used for the client &apos;{0}&apos; and not for &apos;{1}&apos;.
        /// </summary>
        public static string AccessTokenValidClient {
            get {
                return ResourceManager.GetString("AccessTokenValidClient", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à an acr with the same name already exists.
        /// </summary>
        public static string AcrWithSameNameExists {
            get {
                return ResourceManager.GetString("AcrWithSameNameExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à API resource {0} already exists.
        /// </summary>
        public static string ApiResourceAlreadyExists {
            get {
                return ResourceManager.GetString("ApiResourceAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the authentication method {0} doesn&apos;t exist.
        /// </summary>
        public static string AuthenticationMethodNotFound {
            get {
                return ResourceManager.GetString("AuthenticationMethodNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à authorization code has already been used, all tokens previously issued have been revoked.
        /// </summary>
        public static string AuthorizationCodeAlreadyUsed {
            get {
                return ResourceManager.GetString("AuthorizationCodeAlreadyUsed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à authorization code has not been issued by the client.
        /// </summary>
        public static string AuthorizationCodeNotIssuedByClient {
            get {
                return ResourceManager.GetString("AuthorizationCodeNotIssuedByClient", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the authorization_details type is required.
        /// </summary>
        public static string AuthorizationDetailsTypeRequired {
            get {
                return ResourceManager.GetString("AuthorizationDetailsTypeRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the request must be signed with &apos;{0}&apos; algorithm.
        /// </summary>
        public static string AuthRequestAlgNotValid {
            get {
                return ResourceManager.GetString("AuthRequestAlgNotValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the request doesn&apos;t contain correct audience.
        /// </summary>
        public static string AuthRequestBadAudience {
            get {
                return ResourceManager.GetString("AuthRequestBadAudience", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the request doesn&apos;t contain correct issuer.
        /// </summary>
        public static string AuthRequestBadIssuer {
            get {
                return ResourceManager.GetString("AuthRequestBadIssuer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the request cannot be received before &apos;{0}&apos;.
        /// </summary>
        public static string AuthRequestBadNbf {
            get {
                return ResourceManager.GetString("AuthRequestBadNbf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the client is not authorized to use the auth_req_id.
        /// </summary>
        public static string AuthRequestClientNotAuthorized {
            get {
                return ResourceManager.GetString("AuthRequestClientNotAuthorized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the authorization request is expired.
        /// </summary>
        public static string AuthRequestExpired {
            get {
                return ResourceManager.GetString("AuthRequestExpired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the request is expired.
        /// </summary>
        public static string AuthRequestIsExpired {
            get {
                return ResourceManager.GetString("AuthRequestIsExpired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the maximum lifetime of the request is &apos;{0}&apos; seconds.
        /// </summary>
        public static string AuthRequestMaximumLifetime {
            get {
                return ResourceManager.GetString("AuthRequestMaximumLifetime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the request doesn&apos;t contain audience.
        /// </summary>
        public static string AuthRequestNoAudience {
            get {
                return ResourceManager.GetString("AuthRequestNoAudience", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the request doesn&apos;t contain expiration time.
        /// </summary>
        public static string AuthRequestNoExpiration {
            get {
                return ResourceManager.GetString("AuthRequestNoExpiration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the request doesn&apos;t contain iat.
        /// </summary>
        public static string AuthRequestNoIat {
            get {
                return ResourceManager.GetString("AuthRequestNoIat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the request doesn&apos;t contain issuer.
        /// </summary>
        public static string AuthRequestNoIssuer {
            get {
                return ResourceManager.GetString("AuthRequestNoIssuer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the request doesn&apos;t contain jti.
        /// </summary>
        public static string AuthRequestNoJti {
            get {
                return ResourceManager.GetString("AuthRequestNoJti", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the request doesn&apos;t contain nbf.
        /// </summary>
        public static string AuthRequestNoNbf {
            get {
                return ResourceManager.GetString("AuthRequestNoNbf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à you&apos;re not authorized to reject the authorization request.
        /// </summary>
        public static string AuthRequestNotAuthorizedToReject {
            get {
                return ResourceManager.GetString("AuthRequestNotAuthorizedToReject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the authorization request has not been confirmed.
        /// </summary>
        public static string AuthRequestNotConfirmed {
            get {
                return ResourceManager.GetString("AuthRequestNotConfirmed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the authorization request has been rejected.
        /// </summary>
        public static string AuthRequestRejected {
            get {
                return ResourceManager.GetString("AuthRequestRejected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the authorization request is finished.
        /// </summary>
        public static string AuthRequestSent {
            get {
                return ResourceManager.GetString("AuthRequestSent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à an authentication scheme provider with the same name already exists.
        /// </summary>
        public static string AuthSchemeProviderWithSameNameExists {
            get {
                return ResourceManager.GetString("AuthSchemeProviderWithSameNameExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à access token is not correct.
        /// </summary>
        public static string BadAccessToken {
            get {
                return ResourceManager.GetString("BadAccessToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à bad authorization code.
        /// </summary>
        public static string BadAuthorizationCode {
            get {
                return ResourceManager.GetString("BadAuthorizationCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à claim_token parameter is not a JWS token.
        /// </summary>
        public static string BadClaimToken {
            get {
                return ResourceManager.GetString("BadClaimToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the algorithm used by client assertion is not correct.
        /// </summary>
        public static string BadClientAssertionAlg {
            get {
                return ResourceManager.GetString("BadClientAssertionAlg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à bad client assertion audiences.
        /// </summary>
        public static string BadClientAssertionAudiences {
            get {
                return ResourceManager.GetString("BadClientAssertionAudiences", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à bad client assertion decryption.
        /// </summary>
        public static string BadClientAssertionDecryption {
            get {
                return ResourceManager.GetString("BadClientAssertionDecryption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à client_assertion cannot be encrypted (JWE).
        /// </summary>
        public static string BadClientAssertionEncrypted {
            get {
                return ResourceManager.GetString("BadClientAssertionEncrypted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à client assertion is expired.
        /// </summary>
        public static string BadClientAssertionExpired {
            get {
                return ResourceManager.GetString("BadClientAssertionExpired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à bad client assertion format.
        /// </summary>
        public static string BadClientAssertionFormat {
            get {
                return ResourceManager.GetString("BadClientAssertionFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à bad client assertion issuer.
        /// </summary>
        public static string BadClientAssertionIssuer {
            get {
                return ResourceManager.GetString("BadClientAssertionIssuer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à client_assertion is not a valid JWT token.
        /// </summary>
        public static string BadClientAssertionJwt {
            get {
                return ResourceManager.GetString("BadClientAssertionJwt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à bad client assertion signature.
        /// </summary>
        public static string BadClientAssertionSignature {
            get {
                return ResourceManager.GetString("BadClientAssertionSignature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à bad client credential.
        /// </summary>
        public static string BadClientCredential {
            get {
                return ResourceManager.GetString("BadClientCredential", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à grant type {0} is not supported by the client.
        /// </summary>
        public static string BadClientGrantType {
            get {
                return ResourceManager.GetString("BadClientGrantType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à client uri {0} is not correct.
        /// </summary>
        public static string BadClientUri {
            get {
                return ResourceManager.GetString("BadClientUri", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à transform algorithm {0} is not supported.
        /// </summary>
        public static string BadCodeChallengeMethod {
            get {
                return ResourceManager.GetString("BadCodeChallengeMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à code_verifier is invalid.
        /// </summary>
        public static string BadCodeVerifier {
            get {
                return ResourceManager.GetString("BadCodeVerifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à an error occured while trying to authenticate the user.
        /// </summary>
        public static string BadExternalAuthentication {
            get {
                return ResourceManager.GetString("BadExternalAuthentication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à no identifier can be extracted from the external authentication provider.
        /// </summary>
        public static string BadExternalAuthenticationUser {
            get {
                return ResourceManager.GetString("BadExternalAuthenticationUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à bad grant type.
        /// </summary>
        public static string BadGrantType {
            get {
                return ResourceManager.GetString("BadGrantType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the identity token is invalid.
        /// </summary>
        public static string BadIdToken {
            get {
                return ResourceManager.GetString("BadIdToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à signature of the id_token_hint is not correct.
        /// </summary>
        public static string BadIdTokenHintSig {
            get {
                return ResourceManager.GetString("BadIdTokenHintSig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à software statement issuer is not trusted.
        /// </summary>
        public static string BadIssuerSoftwareStatement {
            get {
                return ResourceManager.GetString("BadIssuerSoftwareStatement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à jwks uri {0} is not correct.
        /// </summary>
        public static string BadJwksUri {
            get {
                return ResourceManager.GetString("BadJwksUri", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à software statement is not a JWS token.
        /// </summary>
        public static string BadJwsSoftwareStatement {
            get {
                return ResourceManager.GetString("BadJwsSoftwareStatement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à logo uri {0} is not correct.
        /// </summary>
        public static string BadLogoUri {
            get {
                return ResourceManager.GetString("BadLogoUri", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à policy uri {0} is not correct.
        /// </summary>
        public static string BadPolicyUri {
            get {
                return ResourceManager.GetString("BadPolicyUri", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à redirect_uri {0} is not correct.
        /// </summary>
        public static string BadRedirectUri {
            get {
                return ResourceManager.GetString("BadRedirectUri", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à bad refresh token.
        /// </summary>
        public static string BadRefreshToken {
            get {
                return ResourceManager.GetString("BadRefreshToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à response mode {0} is not supported.
        /// </summary>
        public static string BadResponseMode {
            get {
                return ResourceManager.GetString("BadResponseMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à response type must equals to &apos;code&apos;.
        /// </summary>
        public static string BadResponseType {
            get {
                return ResourceManager.GetString("BadResponseType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à response types {0} are not supported.
        /// </summary>
        public static string BadResponseTypes {
            get {
                return ResourceManager.GetString("BadResponseTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à response types {0} are not supported by the client.
        /// </summary>
        public static string BadResponseTypesClient {
            get {
                return ResourceManager.GetString("BadResponseTypesClient", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the certificate is not correct.
        /// </summary>
        public static string BadSelfSignedCertificate {
            get {
                return ResourceManager.GetString("BadSelfSignedCertificate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à software statement signature is invalid.
        /// </summary>
        public static string BadSoftwareStatementSignature {
            get {
                return ResourceManager.GetString("BadSoftwareStatementSignature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à bad token.
        /// </summary>
        public static string BadToken {
            get {
                return ResourceManager.GetString("BadToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à token format {0} is invalid.
        /// </summary>
        public static string BadTokenFormat {
            get {
                return ResourceManager.GetString("BadTokenFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à tos uri {0} is not correct.
        /// </summary>
        public static string BadTosUri {
            get {
                return ResourceManager.GetString("BadTosUri", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à bad user credential.
        /// </summary>
        public static string BadUserCredential {
            get {
                return ResourceManager.GetString("BadUserCredential", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the authorization request is not in pending.
        /// </summary>
        public static string BcAuthorizeNotPending {
            get {
                return ResourceManager.GetString("BcAuthorizeNotPending", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à binding_message must not exceed {0} characters.
        /// </summary>
        public static string BindingMessageMustNotExceed {
            get {
                return ResourceManager.GetString("BindingMessageMustNotExceed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à pairwise subject cannot be generated because the sector_identifier_uri is empty and there is no redirect_uri.
        /// </summary>
        public static string CannotGeneratePairwiseSubjectBecauseNoSectorIdentifier {
            get {
                return ResourceManager.GetString("CannotGeneratePairwiseSubjectBecauseNoSectorIdentifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à pairwise subject cannot be generated because the sectore_identifier_uri is empty and the client contains more than one redirect_uri.
        /// </summary>
        public static string CannotGeneratePairwiseSubjectMoreThanOneRedirectUrls {
            get {
                return ResourceManager.GetString("CannotGeneratePairwiseSubjectMoreThanOneRedirectUrls", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à You don&apos;t have the permission to read the certificate store.
        /// </summary>
        public static string CannotReadCertificateStore {
            get {
                return ResourceManager.GetString("CannotReadCertificateStore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the parameters client_metadata and client_metadata_uri cannot be used the same time.
        /// </summary>
        public static string CannotUseClientMetadataAndClientMetadataUri {
            get {
                return ResourceManager.GetString("CannotUseClientMetadataAndClientMetadataUri", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the certificate cannot be generated.
        /// </summary>
        public static string CertificateCannotBeGenerated {
            get {
                return ResourceManager.GetString("CertificateCannotBeGenerated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the client certificate cannot be generated.
        /// </summary>
        public static string CertificateClientCannotBeGenerated {
            get {
                return ResourceManager.GetString("CertificateClientCannotBeGenerated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The certificate doesn&apos;t exist or is invalid.
        /// </summary>
        public static string CertificateDoesntExistInvalid {
            get {
                return ResourceManager.GetString("CertificateDoesntExistInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The certificate doesn&apos;t contain private key.
        /// </summary>
        public static string CertificateDoesntHavePrivateKey {
            get {
                return ResourceManager.GetString("CertificateDoesntHavePrivateKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the certificate is not self signed.
        /// </summary>
        public static string CertificateIsNotSelfSigned {
            get {
                return ResourceManager.GetString("CertificateIsNotSelfSigned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à certificate is not trusted.
        /// </summary>
        public static string CertificateIsNotTrusted {
            get {
                return ResourceManager.GetString("CertificateIsNotTrusted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à certificate is required.
        /// </summary>
        public static string CertificateIsRequired {
            get {
                return ResourceManager.GetString("CertificateIsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à certificate san DNS is invalid.
        /// </summary>
        public static string CertificateSanDnsInvalid {
            get {
                return ResourceManager.GetString("CertificateSanDnsInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à certificate san EMAIL is invalid.
        /// </summary>
        public static string CertificateSanEmailInvalid {
            get {
                return ResourceManager.GetString("CertificateSanEmailInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à certificate san IP is invalid.
        /// </summary>
        public static string CertificateSanIpInvalid {
            get {
                return ResourceManager.GetString("CertificateSanIpInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à certificate subject is invalid.
        /// </summary>
        public static string CertificateSubjectInvalid {
            get {
                return ResourceManager.GetString("CertificateSubjectInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à client assertion cannot be decryted by the client secret.
        /// </summary>
        public static string ClientAssertionCannotBeDecrypted {
            get {
                return ResourceManager.GetString("ClientAssertionCannotBeDecrypted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à client assertion is missing.
        /// </summary>
        public static string ClientAssertionIsMissing {
            get {
                return ResourceManager.GetString("ClientAssertionIsMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à client assertion must be encrypted JWT (JWE).
        /// </summary>
        public static string ClientAssertionIsNotEncrypted {
            get {
                return ResourceManager.GetString("ClientAssertionIsNotEncrypted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à client assertion must be a signed JWT (JWS).
        /// </summary>
        public static string ClientAssertionIsNotSigned {
            get {
                return ResourceManager.GetString("ClientAssertionIsNotSigned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à client assertion must be encrypted JWT (JWE).
        /// </summary>
        public static string ClientAssertionMustBeEncrypted {
            get {
                return ResourceManager.GetString("ClientAssertionMustBeEncrypted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à client assertion is not signed by a known Json Web Key.
        /// </summary>
        public static string ClientAssertionNotSignedByKnownJwk {
            get {
                return ResourceManager.GetString("ClientAssertionNotSignedByKnownJwk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à unexpected client_assertion_type, must be equals to {0}.
        /// </summary>
        public static string ClientAssertionTypeIsUnexpected {
            get {
                return ResourceManager.GetString("ClientAssertionTypeIsUnexpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à client assertion type {0} is not supported.
        /// </summary>
        public static string ClientAssertionTypeNotSupported {
            get {
                return ResourceManager.GetString("ClientAssertionTypeNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à client identifier cannot be extracted from the initial request.
        /// </summary>
        public static string ClientIdCannotBeExtracted {
            get {
                return ResourceManager.GetString("ClientIdCannotBeExtracted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à client_id cannot be extracted from client_assertion.
        /// </summary>
        public static string ClientIdCannotBeExtractedFromClientAssertion {
            get {
                return ResourceManager.GetString("ClientIdCannotBeExtractedFromClientAssertion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à client identifier {0} already exists.
        /// </summary>
        public static string ClientIdentifierAlreadyExists {
            get {
                return ResourceManager.GetString("ClientIdentifierAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à client identifier must be identical.
        /// </summary>
        public static string ClientIdentifierMustBeIdentical {
            get {
                return ResourceManager.GetString("ClientIdentifierMustBeIdentical", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the client_metadata or client_metadata_uri parameter cannot be used with a pre-registered client.
        /// </summary>
        public static string ClientMetadataCannotBeUsedWithRegisteredClient {
            get {
                return ResourceManager.GetString("ClientMetadataCannotBeUsedWithRegisteredClient", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à client_notification_token must not exceed 1024 characters.
        /// </summary>
        public static string ClientNotificationTokenCannotExceed1024 {
            get {
                return ResourceManager.GetString("ClientNotificationTokenCannotExceed1024", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à client_notification_token must contains at least 128 bytes.
        /// </summary>
        public static string ClientNotificationTokenMustContainsAtLeast128Bytes {
            get {
                return ResourceManager.GetString("ClientNotificationTokenMustContainsAtLeast128Bytes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à client secret must be identical.
        /// </summary>
        public static string ClientSecretMustBeIdentical {
            get {
                return ResourceManager.GetString("ClientSecretMustBeIdentical", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Token exchange is not enabled.
        /// </summary>
        public static string ClientTokenExchangedNotEnabled {
            get {
                return ResourceManager.GetString("ClientTokenExchangedNotEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the content-type is not correct.
        /// </summary>
        public static string ContentTypeNotSupported {
            get {
                return ResourceManager.GetString("ContentTypeNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à there is a mismatch between the dpop_jkt and the DPoP proof.
        /// </summary>
        public static string DpopJktMismatch {
            get {
                return ResourceManager.GetString("DpopJktMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à jwks and jwks_uri parameters cannot be passed at the same time.
        /// </summary>
        public static string DuplicateJwks {
            get {
                return ResourceManager.GetString("DuplicateJwks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à duplicate scopes : {0}.
        /// </summary>
        public static string DuplicateScopes {
            get {
                return ResourceManager.GetString("DuplicateScopes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The email is taken.
        /// </summary>
        public static string EmailIsTaken {
            get {
                return ResourceManager.GetString("EmailIsTaken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the authorization request is expired.
        /// </summary>
        public static string ExpiredBcAuthorize {
            get {
                return ResourceManager.GetString("ExpiredBcAuthorize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à grant_id cannot be specified because the grant_management_action is equals to create.
        /// </summary>
        public static string GrantIdCannotBeSpecified {
            get {
                return ResourceManager.GetString("GrantIdCannotBeSpecified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à grant is not accepted.
        /// </summary>
        public static string GrantIsNotAccepted {
            get {
                return ResourceManager.GetString("GrantIsNotAccepted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à group {0} already exists.
        /// </summary>
        public static string GroupExists {
            get {
                return ResourceManager.GetString("GroupExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à users are not extracted.
        /// </summary>
        public static string IdProvisioningProcessIsNotExtracted {
            get {
                return ResourceManager.GetString("IdProvisioningProcessIsNotExtracted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à process cannot be started twice.
        /// </summary>
        public static string IdProvisioningProcessStarted {
            get {
                return ResourceManager.GetString("IdProvisioningProcessStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The same mapping type cannot be added twice..
        /// </summary>
        public static string IdProvisioningTypeUnique {
            get {
                return ResourceManager.GetString("IdProvisioningTypeUnique", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the nonce claim is missing in the id_token.
        /// </summary>
        public static string IdTokenNonceMissing {
            get {
                return ResourceManager.GetString("IdTokenNonceMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the session is not active.
        /// </summary>
        public static string InactiveSession {
            get {
                return ResourceManager.GetString("InactiveSession", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à access token has an invalid scope.
        /// </summary>
        public static string InvalidAccessTokenScope {
            get {
                return ResourceManager.GetString("InvalidAccessTokenScope", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the alg used to sign the id_token_hint is invalid.
        /// </summary>
        public static string InvalidAlgUsedToSignIdTokenHint {
            get {
                return ResourceManager.GetString("InvalidAlgUsedToSignIdTokenHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Impossible to validate the anti forgery token, close all the window and retry again.
        /// </summary>
        public static string InvalidAntiForgeryToken {
            get {
                return ResourceManager.GetString("InvalidAntiForgeryToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à application type is invalid.
        /// </summary>
        public static string InvalidApplicationType {
            get {
                return ResourceManager.GetString("InvalidApplicationType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à invalid audiences.
        /// </summary>
        public static string InvalidAudience {
            get {
                return ResourceManager.GetString("InvalidAudience", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à audience contained in id_token_hint is invalid.
        /// </summary>
        public static string InvalidAudienceIdTokenHint {
            get {
                return ResourceManager.GetString("InvalidAudienceIdTokenHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the authorization_details location must be equal to the authorization server {0}.
        /// </summary>
        public static string InvalidAuthDetailsLocation {
            get {
                return ResourceManager.GetString("InvalidAuthDetailsLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the status of the authentication device is invalid, it must be equals to PENDING.
        /// </summary>
        public static string InvalidAuthDeviceStatusForRejection {
            get {
                return ResourceManager.GetString("InvalidAuthDeviceStatusForRejection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à authorization request doesn&apos;t exist.
        /// </summary>
        public static string InvalidAuthRequestId {
            get {
                return ResourceManager.GetString("InvalidAuthRequestId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à invalid back channel client notification endpoint.
        /// </summary>
        public static string InvalidBcClientNotificationEdp {
            get {
                return ResourceManager.GetString("InvalidBcClientNotificationEdp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à invalid back channel delivery mode.
        /// </summary>
        public static string InvalidBcDeliveryMode {
            get {
                return ResourceManager.GetString("InvalidBcDeliveryMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à claims {0} are invalid.
        /// </summary>
        public static string InvalidClaims {
            get {
                return ResourceManager.GetString("InvalidClaims", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the client_id claim is invalid.
        /// </summary>
        public static string InvalidClientIdClaim {
            get {
                return ResourceManager.GetString("InvalidClientIdClaim", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the device code has not been issued for this client.
        /// </summary>
        public static string InvalidClientIdDeviceCode {
            get {
                return ResourceManager.GetString("InvalidClientIdDeviceCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à client_id contained in the id_token_hint is invalid.
        /// </summary>
        public static string InvalidClientIdTokenHint {
            get {
                return ResourceManager.GetString("InvalidClientIdTokenHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the client_metadata_uri in the Authorization Request returns an error or contains invalid data.
        /// </summary>
        public static string InvalidClientMetadataUri {
            get {
                return ResourceManager.GetString("InvalidClientMetadataUri", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à DPoP must be bound to the access token.
        /// </summary>
        public static string InvalidDpopBoundToAccessToken {
            get {
                return ResourceManager.GetString("InvalidDpopBoundToAccessToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the DPoP parameter must be a string.
        /// </summary>
        public static string InvalidDpopHeader {
            get {
                return ResourceManager.GetString("InvalidDpopHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the alg / enc used to encrypt the id_token_hint is invalid.
        /// </summary>
        public static string InvalidEncOrAlgUsedToEncryptIdTokenHint {
            get {
                return ResourceManager.GetString("InvalidEncOrAlgUsedToEncryptIdTokenHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the device code is expired.
        /// </summary>
        public static string InvalidExpiredDeviceCode {
            get {
                return ResourceManager.GetString("InvalidExpiredDeviceCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the grant_management_action {0} is not valid.
        /// </summary>
        public static string InvalidGrantManagementAction {
            get {
                return ResourceManager.GetString("InvalidGrantManagementAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à client notification endpoint doesn&apos;t contain https scheme.
        /// </summary>
        public static string InvalidHttpsBcClientNotificationEdp {
            get {
                return ResourceManager.GetString("InvalidHttpsBcClientNotificationEdp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à initiate_login_uri doesn&apos;t contain https scheme.
        /// </summary>
        public static string InvalidHttpsInitiateLoginUri {
            get {
                return ResourceManager.GetString("InvalidHttpsInitiateLoginUri", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à redirect_uri does not contain https scheme.
        /// </summary>
        public static string InvalidHttpsRedirectUri {
            get {
                return ResourceManager.GetString("InvalidHttpsRedirectUri", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à sector_identifier_uri doesn&apos;t contain https scheme.
        /// </summary>
        public static string InvalidHttpsSectorIdentifierUri {
            get {
                return ResourceManager.GetString("InvalidHttpsSectorIdentifierUri", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à id_token_hint is invalid.
        /// </summary>
        public static string InvalidIdTokenHint {
            get {
                return ResourceManager.GetString("InvalidIdTokenHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à incoming request is invalid.
        /// </summary>
        public static string InvalidIncomingRequest {
            get {
                return ResourceManager.GetString("InvalidIncomingRequest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à initiate_login_uri is not a valid URI.
        /// </summary>
        public static string InvalidInitiateLoginUri {
            get {
                return ResourceManager.GetString("InvalidInitiateLoginUri", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the device code has already been used to get a token.
        /// </summary>
        public static string InvalidIssuedDeviceCode {
            get {
                return ResourceManager.GetString("InvalidIssuedDeviceCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à request parameter is not a valid JWE token.
        /// </summary>
        public static string InvalidJweRequestParameter {
            get {
                return ResourceManager.GetString("InvalidJweRequestParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à request parameter is not a valid JWS token.
        /// </summary>
        public static string InvalidJwsRequestParameter {
            get {
                return ResourceManager.GetString("InvalidJwsRequestParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à JSON Web Token cannot be read.
        /// </summary>
        public static string InvalidJwt {
            get {
                return ResourceManager.GetString("InvalidJwt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à redirect_uri must not contain localhost.
        /// </summary>
        public static string InvalidLocahostRedirectUri {
            get {
                return ResourceManager.GetString("InvalidLocahostRedirectUri", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the nonce is invalid and doesn&apos;t match the nonce present in the authorization request.
        /// </summary>
        public static string InvalidNonce {
            get {
                return ResourceManager.GetString("InvalidNonce", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à authorization request is still pending as the end user hasn&apos;t yet completed the user-interation steps.
        /// </summary>
        public static string InvalidPendingDeviceCode {
            get {
                return ResourceManager.GetString("InvalidPendingDeviceCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the pin is invalid.
        /// </summary>
        public static string InvalidPin {
            get {
                return ResourceManager.GetString("InvalidPin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à post_logout_redirect_uri parameter is invalid.
        /// </summary>
        public static string InvalidPostLogoutRedirectUrl {
            get {
                return ResourceManager.GetString("InvalidPostLogoutRedirectUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à either the pre-authorized code has expired or is invalid.
        /// </summary>
        public static string InvalidPreAuthorizedCode {
            get {
                return ResourceManager.GetString("InvalidPreAuthorizedCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à request parameter is invalid.
        /// </summary>
        public static string InvalidRequestParameter {
            get {
                return ResourceManager.GetString("InvalidRequestParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à request_uri parameter is invalid.
        /// </summary>
        public static string InvalidRequestUriParameter {
            get {
                return ResourceManager.GetString("InvalidRequestUriParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à At least one of the provided resource identifiers was not found at the authorization server..
        /// </summary>
        public static string InvalidResourceId {
            get {
                return ResourceManager.GetString("InvalidResourceId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the response_type claim is invalid.
        /// </summary>
        public static string InvalidResponseTypeClaim {
            get {
                return ResourceManager.GetString("InvalidResponseTypeClaim", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à At least one of the scopes included in the request does not match an available scope for any of the resources associated with requested permissions for the permission ticket provided by the client..
        /// </summary>
        public static string InvalidScope {
            get {
                return ResourceManager.GetString("InvalidScope", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à sector_identifier_uri is not a valid URI.
        /// </summary>
        public static string InvalidSectorIdentifierUri {
            get {
                return ResourceManager.GetString("InvalidSectorIdentifierUri", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the signature algorithm is invalid.
        /// </summary>
        public static string InvalidSignatureAlg {
            get {
                return ResourceManager.GetString("InvalidSignatureAlg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à subject contained in id_token_hint is invalid.
        /// </summary>
        public static string InvalidSubjectIdTokenHint {
            get {
                return ResourceManager.GetString("InvalidSubjectIdTokenHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à subject_type is invalid.
        /// </summary>
        public static string InvalidSubjectType {
            get {
                return ResourceManager.GetString("InvalidSubjectType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à permission ticket is not correct.
        /// </summary>
        public static string InvalidTicket {
            get {
                return ResourceManager.GetString("InvalidTicket", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the tx_code is invalid.
        /// </summary>
        public static string InvalidTransactionCode {
            get {
                return ResourceManager.GetString("InvalidTransactionCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à At least one of the scopes included in the request does not match an available scope for any of the resources associated with requested permissions for the permission ticket provided by the client..
        /// </summary>
        public static string InvalidUmaPermissionScope {
            get {
                return ResourceManager.GetString("InvalidUmaPermissionScope", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à At least one of the scopes included in the request does not match an available scope for any of the resources associated with requested permissions for the permission ticket provided by the client..
        /// </summary>
        public static string InvalidUmaResource {
            get {
                return ResourceManager.GetString("InvalidUmaResource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the user_code is not valid.
        /// </summary>
        public static string InvalidUserCode {
            get {
                return ResourceManager.GetString("InvalidUserCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à JWT doesn&apos;t have a correct signature.
        /// </summary>
        public static string JwtBadSignature {
            get {
                return ResourceManager.GetString("JwtBadSignature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à An unexcepted error occured while trying to decrypt the JWT.
        /// </summary>
        public static string JwtCannotBeDecrypted {
            get {
                return ResourceManager.GetString("JwtCannotBeDecrypted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à JWT cannnot be encrypted.
        /// </summary>
        public static string JwtCannotBeEncrypted {
            get {
                return ResourceManager.GetString("JwtCannotBeEncrypted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à JWT must be encrypted with the algorithm {0}.
        /// </summary>
        public static string JwtMustBeEncrypted {
            get {
                return ResourceManager.GetString("JwtMustBeEncrypted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à JWT must be signed with the algorithm {0}.
        /// </summary>
        public static string JwtMustBeSigned {
            get {
                return ResourceManager.GetString("JwtMustBeSigned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à login_hint_token has expired.
        /// </summary>
        public static string LoginHintTokenIsExpired {
            get {
                return ResourceManager.GetString("LoginHintTokenIsExpired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à login is required.
        /// </summary>
        public static string LoginIsRequired {
            get {
                return ResourceManager.GetString("LoginIsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à access token is missing.
        /// </summary>
        public static string MissingAccessToken {
            get {
                return ResourceManager.GetString("MissingAccessToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à missing client_id.
        /// </summary>
        public static string MissingClientId {
            get {
                return ResourceManager.GetString("MissingClientId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the client_id claim is missing.
        /// </summary>
        public static string MissingClientIdClaim {
            get {
                return ResourceManager.GetString("MissingClientIdClaim", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the destination is empty.
        /// </summary>
        public static string MissingDestination {
            get {
                return ResourceManager.GetString("MissingDestination", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the DPOP Proof is missing.
        /// </summary>
        public static string MissingDpopProof {
            get {
                return ResourceManager.GetString("MissingDpopProof", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à id_token_hint parameter is missing.
        /// </summary>
        public static string MissingIdTokenHint {
            get {
                return ResourceManager.GetString("MissingIdTokenHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the openid_relying_party doesn&apos;t exist in the entity statement.
        /// </summary>
        public static string MissingOpenidRpInEntityStatement {
            get {
                return ResourceManager.GetString("MissingOpenidRpInEntityStatement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à missing parameter {0}.
        /// </summary>
        public static string MissingParameter {
            get {
                return ResourceManager.GetString("MissingParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à missing parameters {0}.
        /// </summary>
        public static string MissingParameters {
            get {
                return ResourceManager.GetString("MissingParameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the parameter post_logout_redirect_uri is missing.
        /// </summary>
        public static string MissingPostLogoutRedirectUri {
            get {
                return ResourceManager.GetString("MissingPostLogoutRedirectUri", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the user doesn&apos;t have a registered mobile device.
        /// </summary>
        public static string MissingRegisteredUserDevice {
            get {
                return ResourceManager.GetString("MissingRegisteredUserDevice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à valid response type must be passed for the grant type {0}.
        /// </summary>
        public static string MissingResponseType {
            get {
                return ResourceManager.GetString("MissingResponseType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the response_type claim is missing.
        /// </summary>
        public static string MissingResponseTypeClaim {
            get {
                return ResourceManager.GetString("MissingResponseTypeClaim", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à missing response types {0}.
        /// </summary>
        public static string MissingResponseTypes {
            get {
                return ResourceManager.GetString("MissingResponseTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the session identifier is missing.
        /// </summary>
        public static string MissingSessionId {
            get {
                return ResourceManager.GetString("MissingSessionId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the subject cannot be extracted from the subject_token.
        /// </summary>
        public static string MissingSubSubjectToken {
            get {
                return ResourceManager.GetString("MissingSubSubjectToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à missing token.
        /// </summary>
        public static string MissingToken {
            get {
                return ResourceManager.GetString("MissingToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the parameter user_code is missing.
        /// </summary>
        public static string MissingUserCode {
            get {
                return ResourceManager.GetString("MissingUserCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the user doesn&apos;t have an active OTP.
        /// </summary>
        public static string NoActiveOtp {
            get {
                return ResourceManager.GetString("NoActiveOtp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à no client certificate.
        /// </summary>
        public static string NoClientCertificate {
            get {
                return ResourceManager.GetString("NoClientCertificate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à no client secret.
        /// </summary>
        public static string NoClientSecret {
            get {
                return ResourceManager.GetString("NoClientSecret", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à no consent has been accepted.
        /// </summary>
        public static string NoConsent {
            get {
                return ResourceManager.GetString("NoConsent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à no essential acr is supported.
        /// </summary>
        public static string NoEssentialAcrIsSupported {
            get {
                return ResourceManager.GetString("NoEssentialAcrIsSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à no JWK with identifier {0} has been found to check the signature of the JWT.
        /// </summary>
        public static string NoJwkFoundToCheckSig {
            get {
                return ResourceManager.GetString("NoJwkFoundToCheckSig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à no JWK with identifier {0} has been found to decrypt the JWT.
        /// </summary>
        public static string NoJwkFoundToDecrypt {
            get {
                return ResourceManager.GetString("NoJwkFoundToDecrypt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à no JWK with algorithm {0} has been found to sign the JWT.
        /// </summary>
        public static string NoJwkWithAlgSig {
            get {
                return ResourceManager.GetString("NoJwkWithAlgSig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à no redirect uri has been registered.
        /// </summary>
        public static string NoRegisteredRedirectUrl {
            get {
                return ResourceManager.GetString("NoRegisteredRedirectUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the incoming request doesn&apos;t contain a session_id.
        /// </summary>
        public static string NoSessionId {
            get {
                return ResourceManager.GetString("NoSessionId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à not the same redirect_uri.
        /// </summary>
        public static string NotSameRedirectUri {
            get {
                return ResourceManager.GetString("NotSameRedirectUri", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the DPoP proof must be a Json Web Token.
        /// </summary>
        public static string NotWellFormedDpopToken {
            get {
                return ResourceManager.GetString("NotWellFormedDpopToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à only one hint can be passed in the request.
        /// </summary>
        public static string OnleHintMustBePassed {
            get {
                return ResourceManager.GetString("OnleHintMustBePassed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à only hybrid workflow are supported.
        /// </summary>
        public static string OnlyHybridWorkflowsAreSupported {
            get {
                return ResourceManager.GetString("OnlyHybridWorkflowsAreSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à only ping or poll mode can be used to get tokens.
        /// </summary>
        public static string OnlyPingOrPollModeCanBeUsed {
            get {
                return ResourceManager.GetString("OnlyPingOrPollModeCanBeUsed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à only one polling device can be registrered.
        /// </summary>
        public static string PollingDeviceAlreadyRegistered {
            get {
                return ResourceManager.GetString("PollingDeviceAlreadyRegistered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à polling device is not registered.
        /// </summary>
        public static string PollingDeviceNotRegistered {
            get {
                return ResourceManager.GetString("PollingDeviceNotRegistered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à realm {0} already exists.
        /// </summary>
        public static string RealmExists {
            get {
                return ResourceManager.GetString("RealmExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the redirect_uri cannot contains fragment.
        /// </summary>
        public static string RedirectUriContainsFragment {
            get {
                return ResourceManager.GetString("RedirectUriContainsFragment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à refresh token is expired.
        /// </summary>
        public static string RefreshTokenIsExpired {
            get {
                return ResourceManager.GetString("RefreshTokenIsExpired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à refresh token has not been issued by the client.
        /// </summary>
        public static string RefreshTokenNotIssuedByClient {
            get {
                return ResourceManager.GetString("RefreshTokenNotIssuedByClient", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à a registration worklow with the same name already exists.
        /// </summary>
        public static string RegistrationWorkflowExists {
            get {
                return ResourceManager.GetString("RegistrationWorkflowExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The client is not authorized to have these permissions..
        /// </summary>
        public static string RequestDenied {
            get {
                return ResourceManager.GetString("RequestDenied", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à requested_expiry must be positive.
        /// </summary>
        public static string RequestedExpiryMustBePositive {
            get {
                return ResourceManager.GetString("RequestedExpiryMustBePositive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à request object has bad audience.
        /// </summary>
        public static string RequestObjectBadAudience {
            get {
                return ResourceManager.GetString("RequestObjectBadAudience", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à request object is expired.
        /// </summary>
        public static string RequestObjectIsExpired {
            get {
                return ResourceManager.GetString("RequestObjectIsExpired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the request_uri is invalid.
        /// </summary>
        public static string RequestUriIsInvalid {
            get {
                return ResourceManager.GetString("RequestUriIsInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the request_uri is required.
        /// </summary>
        public static string RequestUriIsRequired {
            get {
                return ResourceManager.GetString("RequestUriIsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the parameter client_metadata or client_metadata_uri is required.
        /// </summary>
        public static string RequiredClientMetadataOrClientMetadataUri {
            get {
                return ResourceManager.GetString("RequiredClientMetadataOrClientMetadataUri", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à scope &apos;{0}&apos; already exists.
        /// </summary>
        public static string ScopeAlreadyExists {
            get {
                return ResourceManager.GetString("ScopeAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Name must be unique.
        /// </summary>
        public static string ScopeClaimMapperNameMustBeUnique {
            get {
                return ResourceManager.GetString("ScopeClaimMapperNameMustBeUnique", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à SAML Attribute name must be unique.
        /// </summary>
        public static string ScopeClaimMapperSamlAttributeName {
            get {
                return ResourceManager.GetString("ScopeClaimMapperSamlAttributeName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Token claim name must be unique.
        /// </summary>
        public static string ScopeClaimMapperTokenClaimNameMustBeUnique {
            get {
                return ResourceManager.GetString("ScopeClaimMapperTokenClaimNameMustBeUnique", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à self-issued request cannot request access to scope different to OPENID.
        /// </summary>
        public static string ScopeDifferentToOpenidCannotBeSelfIssued {
            get {
                return ResourceManager.GetString("ScopeDifferentToOpenidCannotBeSelfIssued", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The same mapping type cannot be added twice..
        /// </summary>
        public static string ScopeMapperTypeUnique {
            get {
                return ResourceManager.GetString("ScopeMapperTypeUnique", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à signature key {0} already exists.
        /// </summary>
        public static string SigKeyAlreadyExists {
            get {
                return ResourceManager.GetString("SigKeyAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à you tried too many times to get a token.
        /// </summary>
        public static string TooManyAuthRequest {
            get {
                return ResourceManager.GetString("TooManyAuthRequest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à too many DPoP parameters are passed in the header.
        /// </summary>
        public static string TooManyDpopHeader {
            get {
                return ResourceManager.GetString("TooManyDpopHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à you&apos;re not authorized to access to the permissions endpoint.
        /// </summary>
        public static string UnauthorizedAccessPermissionApi {
            get {
                return ResourceManager.GetString("UnauthorizedAccessPermissionApi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the access token is not authorized to access to the operation.
        /// </summary>
        public static string UnauthorizedAccessToken {
            get {
                return ResourceManager.GetString("UnauthorizedAccessToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à unauthorized client.
        /// </summary>
        public static string UnauthorizedClient {
            get {
                return ResourceManager.GetString("UnauthorizedClient", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the client {0} is not authorized to access to perform operations on the grant.
        /// </summary>
        public static string UnauthorizedClientAccessGrant {
            get {
                return ResourceManager.GetString("UnauthorizedClientAccessGrant", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à unauthorized to scopes : {0}.
        /// </summary>
        public static string UnauthorizedScopes {
            get {
                return ResourceManager.GetString("UnauthorizedScopes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à you are not authorized to validate the authorization request.
        /// </summary>
        public static string UnauthorizedToValidateBcAuthorization {
            get {
                return ResourceManager.GetString("UnauthorizedToValidateBcAuthorization", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the user {0} is not authorized to access to performance operations on the grant.
        /// </summary>
        public static string UnauthorizedUserAccessGrant {
            get {
                return ResourceManager.GetString("UnauthorizedUserAccessGrant", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the request cannot contains request_uri.
        /// </summary>
        public static string UnexpectedRequestUriParameter {
            get {
                return ResourceManager.GetString("UnexpectedRequestUriParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à either the access token has been revoked or is invalid.
        /// </summary>
        public static string UnknownAccessToken {
            get {
                return ResourceManager.GetString("UnknownAccessToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the acr {0} doesn&apos;t exist.
        /// </summary>
        public static string UnknownAcr {
            get {
                return ResourceManager.GetString("UnknownAcr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the API resource {0} doesn&apos;t exist.
        /// </summary>
        public static string UnknownApiResource {
            get {
                return ResourceManager.GetString("UnknownApiResource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à following audiences {0} don&apos;t exist.
        /// </summary>
        public static string UnknownAudience {
            get {
                return ResourceManager.GetString("UnknownAudience", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à unknown authentication method : {0}.
        /// </summary>
        public static string UnknownAuthMethod {
            get {
                return ResourceManager.GetString("UnknownAuthMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the authentication methods {0} are unknown.
        /// </summary>
        public static string UnknownAuthMethods {
            get {
                return ResourceManager.GetString("UnknownAuthMethods", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the authentication scheme provider {0} doesn&apos;t exist.
        /// </summary>
        public static string UnknownAuthSchemeProvider {
            get {
                return ResourceManager.GetString("UnknownAuthSchemeProvider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the authentication scheme provider cannot be updated because the following properties are unknown : {0}.
        /// </summary>
        public static string UnknownAuthSchemeProviderProperties {
            get {
                return ResourceManager.GetString("UnknownAuthSchemeProviderProperties", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the back channel authorization {0} doesn&apos;t exist.
        /// </summary>
        public static string UnknownBcAuthorize {
            get {
                return ResourceManager.GetString("UnknownBcAuthorize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à unknown certificate authority {0}.
        /// </summary>
        public static string UnknownCa {
            get {
                return ResourceManager.GetString("UnknownCa", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à unknown client {0}.
        /// </summary>
        public static string UnknownClient {
            get {
                return ResourceManager.GetString("UnknownClient", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à unknown client certificate {0}.
        /// </summary>
        public static string UnknownClientCa {
            get {
                return ResourceManager.GetString("UnknownClientCa", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the credential offer doesn&apos;t exist.
        /// </summary>
        public static string UnknownCredentialOffer {
            get {
                return ResourceManager.GetString("UnknownCredentialOffer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the device_code doesn&apos;t exist.
        /// </summary>
        public static string UnknownDeviceCode {
            get {
                return ResourceManager.GetString("UnknownDeviceCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the device {0} is not supported.
        /// </summary>
        public static string UnknownDeviceType {
            get {
                return ResourceManager.GetString("UnknownDeviceType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The error message {0} is unknown.
        /// </summary>
        public static string UnknownErrorMessage {
            get {
                return ResourceManager.GetString("UnknownErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the grant {0} doesn&apos;t exist.
        /// </summary>
        public static string UnknownGrant {
            get {
                return ResourceManager.GetString("UnknownGrant", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the group {0} doesn&apos;t exist.
        /// </summary>
        public static string UnknownGroup {
            get {
                return ResourceManager.GetString("UnknownGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the group {0} don&apos;t exist.
        /// </summary>
        public static string UnknownGroupIds {
            get {
                return ResourceManager.GetString("UnknownGroupIds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à unknown role {0}.
        /// </summary>
        public static string UnknownGroupRole {
            get {
                return ResourceManager.GetString("UnknownGroupRole", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the identity provisioning {0} doesn&apos;t exist.
        /// </summary>
        public static string UnknownIdProvisioning {
            get {
                return ResourceManager.GetString("UnknownIdProvisioning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the mapping rule {0} doesn&apos;t exist.
        /// </summary>
        public static string UnknownIdProvisioningMappingRule {
            get {
                return ResourceManager.GetString("UnknownIdProvisioningMappingRule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the process {0} doesn&apos;t exist.
        /// </summary>
        public static string UnknownIdProvisioningProcess {
            get {
                return ResourceManager.GetString("UnknownIdProvisioningProcess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Json Web Key doesn&apos;t exist.
        /// </summary>
        public static string UnknownJsonWebKey {
            get {
                return ResourceManager.GetString("UnknownJsonWebKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à unknown json web key &apos;{0}&apos;.
        /// </summary>
        public static string UnknownJwk {
            get {
                return ResourceManager.GetString("UnknownJwk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the permissions {0} don&apos;t exist.
        /// </summary>
        public static string UnknownPermissions {
            get {
                return ResourceManager.GetString("UnknownPermissions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the presentation definition {0} doesn&apos;t exist.
        /// </summary>
        public static string UnknownPresentationDefinition {
            get {
                return ResourceManager.GetString("UnknownPresentationDefinition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the realm {0} doesn&apos;t exist.
        /// </summary>
        public static string UnknownRealm {
            get {
                return ResourceManager.GetString("UnknownRealm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the realm role {0} doesn&apos;t exist.
        /// </summary>
        public static string UnknownRealmRole {
            get {
                return ResourceManager.GetString("UnknownRealmRole", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à no registration workflow has been resolved.
        /// </summary>
        public static string UnknownRegistrationWorkflow {
            get {
                return ResourceManager.GetString("UnknownRegistrationWorkflow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à following resources {0} doesn&apos;t exist.
        /// </summary>
        public static string UnknownResource {
            get {
                return ResourceManager.GetString("UnknownResource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à unknown scope {0}.
        /// </summary>
        public static string UnknownScope {
            get {
                return ResourceManager.GetString("UnknownScope", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à unknown scope claim mapper {0}.
        /// </summary>
        public static string UnknownScopeClaimMapper {
            get {
                return ResourceManager.GetString("UnknownScopeClaimMapper", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à scopes {0} are not present in the resource / audience.
        /// </summary>
        public static string UnknownScopeResourceOrAudience {
            get {
                return ResourceManager.GetString("UnknownScopeResourceOrAudience", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à unknown token type hint : {0}.
        /// </summary>
        public static string UnknownTokenTypeHint {
            get {
                return ResourceManager.GetString("UnknownTokenTypeHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the UMA resource doesn&apos;t exist.
        /// </summary>
        public static string UnknownUmaResource {
            get {
                return ResourceManager.GetString("UnknownUmaResource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à unknown user {0}.
        /// </summary>
        public static string UnknownUser {
            get {
                return ResourceManager.GetString("UnknownUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à unknown user&apos;s consent {0}.
        /// </summary>
        public static string UnknownUserConsent {
            get {
                return ResourceManager.GetString("UnknownUserConsent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à unknown user&apos;s credential {0}.
        /// </summary>
        public static string UnknownUserCredential {
            get {
                return ResourceManager.GetString("UnknownUserCredential", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à unknown user&apos;s external authentication provider.
        /// </summary>
        public static string UnknownUserExternalAuthProvider {
            get {
                return ResourceManager.GetString("UnknownUserExternalAuthProvider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à unknown user&apos;s group {0}.
        /// </summary>
        public static string UnknownUserGroup {
            get {
                return ResourceManager.GetString("UnknownUserGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à unknown user&apos;s session {0}.
        /// </summary>
        public static string UnknownUserSession {
            get {
                return ResourceManager.GetString("UnknownUserSession", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the actor type {0} is not supported.
        /// </summary>
        public static string UnsupportedActorType {
            get {
                return ResourceManager.GetString("UnsupportedActorType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the authentication method references {0} are not supported.
        /// </summary>
        public static string UnsupportedAmrs {
            get {
                return ResourceManager.GetString("UnsupportedAmrs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à authorization details types {0} are not supported.
        /// </summary>
        public static string UnsupportedAuthorizationDetailTypes {
            get {
                return ResourceManager.GetString("UnsupportedAuthorizationDetailTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à authorization_encrypted_response_alg is not supported.
        /// </summary>
        public static string UnsupportedAuthorizationEncryptedResponseAlg {
            get {
                return ResourceManager.GetString("UnsupportedAuthorizationEncryptedResponseAlg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à authorization_encrypted_response_enc is not supported.
        /// </summary>
        public static string UnsupportedAuthorizationEncryptedResponseEnc {
            get {
                return ResourceManager.GetString("UnsupportedAuthorizationEncryptedResponseEnc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à authorization_signed_response_alg is not supported.
        /// </summary>
        public static string UnsupportedAuthorizationSignedResponseAlg {
            get {
                return ResourceManager.GetString("UnsupportedAuthorizationSignedResponseAlg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à bc_authentication_request_signing_alg is not supported.
        /// </summary>
        public static string UnsupportedBcAuthenticationRequestSigningAlg {
            get {
                return ResourceManager.GetString("UnsupportedBcAuthenticationRequestSigningAlg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the credential type {0} is not supported.
        /// </summary>
        public static string UnsupportedCredentialType {
            get {
                return ResourceManager.GetString("UnsupportedCredentialType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the credential offer doesn&apos;t support those credential types {0}.
        /// </summary>
        public static string UnsupportedCredentialTypes {
            get {
                return ResourceManager.GetString("UnsupportedCredentialTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à grant type {0} is not supported.
        /// </summary>
        public static string UnsupportedGrantType {
            get {
                return ResourceManager.GetString("UnsupportedGrantType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à grant types {0} are not supported.
        /// </summary>
        public static string UnsupportedGrantTypes {
            get {
                return ResourceManager.GetString("UnsupportedGrantTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à id_token_encrypted_response_alg is not supported.
        /// </summary>
        public static string UnsupportedIdTokenEncryptedResponseAlg {
            get {
                return ResourceManager.GetString("UnsupportedIdTokenEncryptedResponseAlg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à id_token_encrypted_response_enc is not supported.
        /// </summary>
        public static string UnsupportedIdTokenEncryptedResponseEnc {
            get {
                return ResourceManager.GetString("UnsupportedIdTokenEncryptedResponseEnc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à id_token_signed_response_alg is not supported.
        /// </summary>
        public static string UnsupportedIdTokenSignedResponseAlg {
            get {
                return ResourceManager.GetString("UnsupportedIdTokenSignedResponseAlg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the requested token type {0} is not supported.
        /// </summary>
        public static string UnsupportedRequestedTokenType {
            get {
                return ResourceManager.GetString("UnsupportedRequestedTokenType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à request_object_encryption_alg is not supported.
        /// </summary>
        public static string UnsupportedRequestObjectEncryptionAlg {
            get {
                return ResourceManager.GetString("UnsupportedRequestObjectEncryptionAlg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à request_object_encryption_enc is not supported.
        /// </summary>
        public static string UnsupportedRequestObjectEncryptionEnc {
            get {
                return ResourceManager.GetString("UnsupportedRequestObjectEncryptionEnc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à request_object_signing_alg is not supported.
        /// </summary>
        public static string UnsupportedRequestObjectSigningAlg {
            get {
                return ResourceManager.GetString("UnsupportedRequestObjectSigningAlg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the scheme provider {0} is not supported.
        /// </summary>
        public static string UnsupportedSchemeProvider {
            get {
                return ResourceManager.GetString("UnsupportedSchemeProvider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à scopes {0} are not supported.
        /// </summary>
        public static string UnsupportedScopes {
            get {
                return ResourceManager.GetString("UnsupportedScopes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à token_encrypted_response_alg is not supported.
        /// </summary>
        public static string UnsupportedTokenEncryptedResponseAlg {
            get {
                return ResourceManager.GetString("UnsupportedTokenEncryptedResponseAlg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à token_encrypted_response_enc is not supported.
        /// </summary>
        public static string UnsupportedTokenEncryptedResponseEnc {
            get {
                return ResourceManager.GetString("UnsupportedTokenEncryptedResponseEnc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à token_signed_response_alg is not supported.
        /// </summary>
        public static string UnsupportedTokenSignedResponseAlg {
            get {
                return ResourceManager.GetString("UnsupportedTokenSignedResponseAlg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the token type {0} is not supported.
        /// </summary>
        public static string UnsupportedTokenType {
            get {
                return ResourceManager.GetString("UnsupportedTokenType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à userinfo_encrypted_response_alg is not supported.
        /// </summary>
        public static string UnsupportedUserInfoEncryptedResponseAlg {
            get {
                return ResourceManager.GetString("UnsupportedUserInfoEncryptedResponseAlg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à userinfo_encrypted_response_enc is not supported.
        /// </summary>
        public static string UnsupportedUserInfoEncryptedResponseEnc {
            get {
                return ResourceManager.GetString("UnsupportedUserInfoEncryptedResponseEnc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à userinfo_signed_response_alg is not supported.
        /// </summary>
        public static string UnsupportedUserInfoSignResponseAlg {
            get {
                return ResourceManager.GetString("UnsupportedUserInfoSignResponseAlg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Authorization Server required nonce in DPoP proof.
        /// </summary>
        public static string UseDpopNonce {
            get {
                return ResourceManager.GetString("UseDpopNonce", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à user &apos;{0}&apos; already exists.
        /// </summary>
        public static string UserAlreadyExists {
            get {
                return ResourceManager.GetString("UserAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à the user {0} already exists.
        /// </summary>
        public static string UserExists {
            get {
                return ResourceManager.GetString("UserExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à you&apos;re not authenticated.
        /// </summary>
        public static string UserNotAuthenticated {
            get {
                return ResourceManager.GetString("UserNotAuthenticated", resourceCulture);
            }
        }
    }
}
